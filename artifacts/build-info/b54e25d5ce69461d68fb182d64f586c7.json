{"id":"b54e25d5ce69461d68fb182d64f586c7","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"contracts/interfaces/ITokenRegistry.sol":{"content":"//SPDX-License-Identifier: GNU GPLv3\npragma solidity ^0.8.19;\n\n/**\n * @title Interface for a registry of ERC20 assets that can be locked into and traded withinn the rollup\n * @dev registeredToken[0] is always the current EVM's native gas token (ether on ethereum)\n */\nabstract contract ITokenRegistry {\n    /// EVENTS ///\n    event RollupSet(address _rollup);\n    event TokenPending(address _token);\n    event TokenRegistered(uint256 _index);\n\n    /// MODIFIERS ///\n    /* Ensure a function can only be called by the rollup smart contract */\n    modifier onlyRollup() {\n        assert(msg.sender == rollup);\n        _;\n    }\n\n    /* Ensure a function can only be called by the permissioned sequencer */\n    modifier onlyCoordinator() {\n        assert(msg.sender == coordinator);\n        _;\n    }\n\n    /// VARIABLES ///\n    address public coordinator; // permissioned sequencer address\n    address public rollup; // merkle state CRUD contract\n\n    mapping(address => TokenRegistration) public state; // map erc20 tokens to their state within the rollup\n    mapping(uint256 => address) public registry; // index of registered ERC20 tokens on the rollup\n    uint256 public registryIndex; // boundary of registery (alternatively: numTokens)\n\n    /// FUNCTIONS ///\n    /**\n     * Set the address of the contract managing rollup state in a merkle tree\n     * @dev modifier onlyCoordinator\n     *\n     * @param _rollup - the contract address to designate as the rollup within the registry contract\n     */\n    function setRollup(address _rollup) public virtual;\n\n    /**\n     * Propose a new token be added to the roll-up's exchange network\n     *\n     * @param _token - the contract address of the ERC20 proposed for registry\n     */\n    function registerToken(address _token) public virtual;\n\n    /**\n     * Centralized approval of ERC20 token registry requests\n     * @dev modifier onlyRollup\n     *\n     * @param _token - the contract address of the ERC20 to approve registry proposal for\n     */\n    function approveToken(address _token) public virtual;\n}\n\nenum TokenRegistration { None, Pending, Registered }"},"contracts/libraries/Poseidon.sol":{"content":"//SPDX-License-Identifier: GNU GPLv3\npragma solidity ^0.8.19;\n\n/* Reference Poseidon hasher library contract using 2 inputs */\nlibrary PoseidonT3 {\n    function poseidon(uint256[2] memory) public pure returns (uint256) {}\n}\n\n/* Reference Poseidon hasher library contract using 4 inputs (account hash) */\nlibrary PoseidonT5 {\n    function poseidon(uint256[4] memory) public pure returns (uint256) {}\n}\n\n/* Reference Poseidon hasher library contract using 5 inputs (account hash) */\nlibrary PoseidonT6 {\n    function poseidon(uint256[5] memory) public pure returns (uint256) {}\n}"},"contracts/Rollup.sol":{"content":"//SPDX-License-Identifier: GNU GPLv3\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n// import './interfaces/IRollup.sol';\nimport \"./interfaces/ITokenRegistry.sol\";\n// import \"./interfaces/IVerifier.sol\";\n// import { UnpackedProof, PackedProofs } from \"./libraries/PackedProofs.sol\";\nimport \"./libraries/Poseidon.sol\";\n\n/// @title implementation of Non-custodial rollup\ncontract RollupNC {\n\n    // IUSV public usv; // update state verifier\n    // IWSV public wsv; // withdraw signature verifier\n    mapping(uint256 => uint256) public pendingDeposits;\n    ITokenRegistry public registry;\n\n    uint256 public balDepth;\n    uint256 public txDepth;\n    uint256 public ZERO;\n    uint256[] public zeroCache;\n\n    uint256 public currentRoot;\n    address public coordinator;\n    uint256 public depositQueueStart;\n    uint256 public depositQueueEnd;\n    uint8 public depositQueueSize;\n    uint8 public depositSubtreeHeight;\n    uint256 public updateNumber;\n\n    // (queueNumber => [pubkey_x, pubkey_y, balance, nonce, token_type])\n    mapping(uint256 => uint256) public deposits; //leaf idx => leafHash\n    mapping(uint256 => uint256) public updates; //txRoot => update idx\n    mapping(uint256 => bool) public withdraws; // txLeaf => true if withdrawn\n\n    event RegisteredToken(uint256 tokenType, address tokenContract);\n    event RequestDeposit(uint256[2] pubkey, uint256 amount, uint256 tokenType);\n    event ConfirmDeposit(uint256 oldRoot, uint256 newRoot, uint8 numAdded);\n    event UpdatedState(uint256 currentRoot, uint256 oldRoot, uint256 txRoot);\n    event Withdrawn(uint256 leaf, address recipient);\n\n    modifier onlyCoordinator() {\n        require(msg.sender == coordinator);\n        _;\n    }\n\n    modifier txTreeExists(uint256 _root) {\n        require(updates[_root] > 0, \"Tx root does not exist\");\n        _;\n    }\n    \n    // /// @dev construct a new non-custodial on-chain rollup\n    // /// @param _addresses: array of addresses used in the rollup contract\n    // ///   [0]: Update State Verifier contract\n    // ///   [1]: Withdrawal Signature Verifier contract\n    // ///   [2]: Rollup token registry contract\n    // /// @param _depth: depth of trees\n    // ///   [0]: Balance tree max depth\n    // ///   [1]: Tx tree max depth\n    // /// @param _zero: the value to use for an empty leaf in a merkle tree\n    // /// @param _zeroCache: array of precomputed roots for zero's at different heights\n    // constructor(\n    //     address[3] memory _addresses,\n    //     uint256[2] memory _depth,\n    //     uint256 _zero,\n    //     uint256[] memory _zeroCache\n    // ) {\n    //     require(_depth[0] + 1 == _zeroCache.length, \"Param size mismatch\");\n    //     // assign contract references\n    //     // usv = IUSV(_addresses[0]);\n    //     // wsv = IWSV(_addresses[1]);\n    //     registry = ITokenRegistry(_addresses[2]);\n\n    //     // assign primative variables\n    //     balDepth = _depth[0];\n    //     txDepth = _depth[1];\n    //     ZERO = _zero;\n    //     zeroCache = _zeroCache;\n    //     currentRoot = zeroCache[balDepth];\n    //     coordinator = msg.sender;\n    // }\n\n    // /**\n    //  * Commit a batch of L2 transactions to L1 state by proving correctness\n    //  *\n    //  * @param _proof - packed representation of zero knowledge proof of valid state change\n    //  * @param _txRoot - merkle root storing the transactions mutating currentRoot to _nextRoot\n    //  * @param _nextRoot - the balance tree root after applying _txRoot\n    //  */\n    // function updateState(\n    //     uint256[8] memory _proof,\n    //     uint256 _txRoot,\n    //     uint256 _nextRoot\n    // ) public onlyCoordinator {\n    //     // validate state change via zk proof\n    //     uint256[2] memory a = [_proof[0], _proof[1]];\n    //     uint256[2] memory b_0 = [_proof[2], _proof[3]];\n    //     uint256[2] memory b_1 = [_proof[4], _proof[5]];\n    //     uint256[2] memory c = [_proof[6], _proof[7]];\n    //     uint256[3] memory input = [_txRoot, currentRoot, _nextRoot];\n    //     require(usv.verifyProof(a, [b_0, b_1], c, input), \"SNARK proof is invalid\");\n    //     // update merkle root\n    //     uint256 prev = currentRoot;\n    //     currentRoot = _nextRoot;\n    //     updateNumber++;\n    //     updates[_txRoot] = updateNumber;\n    //     emit UpdatedState(currentRoot, prev, _txRoot); //newRoot, txRoot, oldRoot\n    // }\n\n    // // user tries to deposit ERC20 tokens\n    // function deposit(\n    //     uint256[2] memory pubkey,\n    //     uint256 amount,\n    //     uint256 tokenType\n    // ) public payable {\n    //     // Ensure token can be transferred\n    //     checkToken(amount, tokenType);\n    //     // Store deposit leaf\n    //     uint256 depositHash = PoseidonT6.poseidon(\n    //         [pubkey[0], pubkey[1], amount, uint256(0), tokenType]\n    //     );\n    //     pendingDeposits[depositQueueEnd] = depositHash;\n    //     depositQueueEnd++;\n    //     depositQueueSize++;\n    //     // Generate\n    //     uint8 tmpDepositSubtreeHeight = 0;\n    //     uint256 tmp = depositQueueSize;\n    //     while (tmp % 2 == 0) {\n    //         // while leafs can be hashed into merkle tree, generate a higher order internal node\n    //         pendingDeposits[depositQueueEnd - 2] = PoseidonT3.poseidon(\n    //             [\n    //                 pendingDeposits[depositQueueEnd - 2],\n    //                 pendingDeposits[depositQueueEnd - 1]\n    //             ]\n    //         );\n    //         removeDeposit(false);\n    //         tmp = tmp / 2;\n    //         tmpDepositSubtreeHeight++;\n    //     }\n    //     if (tmpDepositSubtreeHeight > depositSubtreeHeight) {\n    //         depositSubtreeHeight = tmpDepositSubtreeHeight;\n    //     }\n    //     emit RequestDeposit(pubkey, amount, tokenType);\n    // }\n\n    // // // coordinator adds certain number of deposits to balance tree\n    // // // coordinator must specify subtree index in the tree since the deposits\n    // // // are being inserted at a nonzero height\n    // function processDeposits(\n    //     uint256 subtreeDepth,\n    //     uint256[] memory subtreePosition,\n    //     uint256[] memory subtreeProof\n    // ) public onlyCoordinator returns (uint256) {\n    //     // ensure subtree specified is empty\n    //     uint256 emptyRoot = zeroCache[subtreeDepth];\n    //     require(\n    //         currentRoot ==\n    //             getRootFromProof(emptyRoot, subtreePosition, subtreeProof),\n    //         \"specified subtree is not empty\"\n    //     );\n    //     // insert multiple leafs (insert subtree) by computing new root\n    //     uint256 oldRoot = currentRoot;\n    //     currentRoot = getRootFromProof(\n    //         pendingDeposits[depositQueueStart],\n    //         subtreePosition,\n    //         subtreeProof\n    //     );\n    //     removeDeposit(true);\n    //     uint8 numAdded = uint8(2**depositSubtreeHeight);\n    //     depositQueueSize -= numAdded;\n    //     // set deposit subtree height\n    //     depositSubtreeHeight = 0;\n    //     uint256 tmp = depositQueueSize;\n    //     while(tmp / 2 > 0) {\n    //         depositSubtreeHeight += 1;\n    //         tmp = tmp / 2;\n    //     }\n    //     emit ConfirmDeposit(oldRoot, currentRoot, numAdded);\n    //     return currentRoot;\n    // }\n\n    // /**\n    //  * Withdraw a \n    //  */\n    // function withdraw(\n    //     uint256[8] memory _tx, //[fromX, fromY, fromIndex, toX ,toY, nonce, amount, token_type_from, txRoot]\n    //     uint256 _txRoot,\n    //     uint256[] memory _txPosition,\n    //     uint256[] memory _txProof,\n    //     address payable _recipient,\n    //     uint256[8] memory _proof\n    // ) public txTreeExists(_txRoot) {\n    //     require(_tx[7] > 0, \"invalid tokenType\");\n    //     uint256 leaf = PoseidonT3.poseidon([\n    //         PoseidonT5.poseidon([_tx[0], _tx[1], _tx[2], _tx[3]]), \n    //         PoseidonT5.poseidon([_tx[4], _tx[5], _tx[6], _tx[7]])\n    //     ]);\n    //     require(!withdraws[leaf], \"Tx already withdrawn\");\n    //     require(\n    //         _txRoot == getRootFromProof(leaf, _txPosition, _txProof),\n    //         \"tx does not exist in given transaction tree\"\n    //     );\n    //     // validate state change via zk proof\n    //     uint256[4] memory input = [_tx[0], _tx[1], uint256(uint160(address(_recipient))), _tx[5]];\n    //     require(\n    //         wsv.verifyProof(\n    //             [_proof[0], _proof[1]], \n    //             [[_proof[2], _proof[3]], [_proof[4], _proof[5]]],\n    //             [_proof[6], _proof[7]],\n    //             input\n    //         ),\n    //         \"eddsa signature is not valid\"\n    //     );\n\n    //     // transfer token on tokenContract\n    //     if (_tx[7] == 1) {\n    //         // ETH\n    //         _recipient.transfer(_tx[6]);\n    //     } else {\n    //         // ERC20\n    //         address erc20 = registry.registry(_tx[7]);\n    //         require(\n    //             IERC20(erc20).transfer(_recipient, _tx[6]),\n    //             \"transfer failed\"\n    //         );\n    //     }\n    //     emit Withdrawn(leaf, _recipient);\n    // }\n\n    // //call methods on TokenRegistry contract\n\n    // function registerToken(address _token) public {\n    //     registry.registerToken(_token);\n    // }\n\n    // function approveToken(address _token) public onlyCoordinator {\n    //     registry.approveToken(_token);\n    //     emit RegisteredToken(registry.registryIndex(), _token);\n    // }\n\n    // /// INTERNAL FUNCTIONS ///\n\n    // /**\n    //  * Ensures a token can be deposited by the message sender\n    //  * @dev throws error if checks are failed\n    //  * @param _amount - the amount of tokens attempting to transfer\n    //  * @param _type - the token's registry index\n    //  */\n    // function checkToken(uint256 _amount, uint256 _type) internal {\n    //     if (_type == 0) {\n    //         require(\n    //             msg.sender == coordinator,\n    //             \"tokenType 0 is reserved for coordinator\"\n    //         );\n    //         require(\n    //             _amount == 0 && msg.value == 0,\n    //             \"tokenType 0 does not have real value\"\n    //         );\n    //     } else if (_type == 1) {\n    //         require(\n    //             msg.value > 0 && msg.value >= _amount,\n    //             \"msg.value must at least equal stated amount in wei\"\n    //         );\n    //     } else if (_type > 1) {\n    //         require(_amount > 0, \"token deposit must be greater than 0\");\n    //         address tokenAddress = registry.registry(_type);\n    //         require(\n    //             IERC20(tokenAddress).transferFrom(\n    //                 msg.sender,\n    //                 address(this),\n    //                 _amount\n    //             ),\n    //             \"token transfer not approved\"\n    //         );\n    //     }\n    // }\n\n    // /**\n    //  * Remove a deposit in either a FIFO or LIFO manner\n    //  * @param _fifo - if true, remove the oldest element (tallest subtree). else remove the newest element\n    //  */\n    // function removeDeposit(bool _fifo) internal {\n    //     if (_fifo) {\n    //         // remove tallest perfect subtree\n    //         delete pendingDeposits[depositQueueStart];\n    //         depositQueueStart += 1;\n    //     } else {\n    //         // remove last inserted entry\n    //         delete pendingDeposits[depositQueueEnd - 1];\n    //         depositQueueEnd -= 1;\n    //     }\n    // }\n\n    // /**\n    //  * Describe the subtrees for balance tree build in deposit queue\n    //  *\n    //  * @return _leaves - the node value\n    //  * @return _heights - the node height in the tree\n    //  */\n    // function describeDeposits()\n    //     public\n    //     view\n    //     returns (uint256[] memory _leaves, uint256[] memory _heights)\n    // {\n    //     // create return variables\n    //     uint256 num = depositQueueEnd - depositQueueStart; // number of entries in deposit queue\n    //     _leaves = new uint256[](num);\n    //     _heights = new uint256[](num);\n    //     // compute height\n    //     uint8 _i = 0; // track insert index, should always be safe\n    //     for (uint256 i = 1; i <= depositSubtreeHeight; i++) {\n    //         if ((depositQueueSize & (uint256(1) << i)) > 0) _heights[_i++] = i;\n    //     }\n    //     // store leaves\n    //     for (uint256 i = 0; i < num; i++)\n    //         _leaves[i] = pendingDeposits[depositQueueStart + i];\n    // }\n\n    // /**\n    //  * Generate a merkle root from a given proof\n    //  * @notice uses poseidon hash function\n    //  * @dev does not prove membership - returned root must be compared to stored state\n    //  *\n    //  * @param _leaf - the item being checked for membership\n    //  * @param _position - the path of the leaf in the tree\n    //  * @param _proof - the sibling nodes at any given height in the tree\n    //  */\n    // function getRootFromProof(\n    //     uint256 _leaf,\n    //     uint256[] memory _position,\n    //     uint256[] memory _proof\n    // ) public pure returns (uint256) {\n    //     uint256 hash = _leaf;\n    //     for (uint8 i = 0; i < _proof.length; i++) {\n    //         if (_position[i] == 0)\n    //             hash = PoseidonT3.poseidon([hash, _proof[i]]);\n    //         else hash = PoseidonT3.poseidon([_proof[i], hash]);\n    //     }\n    //     return hash;\n    // }\n}"},"contracts/TokenRegistry.sol":{"content":"//SPDX-License-Identifier: GNU GPLv3\npragma solidity ^0.8.19;\n\nimport \"./interfaces/ITokenRegistry.sol\";\n\n/**\n * @title Registry of ERC20 tokens that the Rollup can process\n * @notice documented in ITokenRegistry\n */\ncontract TokenRegistry is ITokenRegistry {\n    /**\n     * Instantiate the RollupNC's ERC20 Token Registry\n     */\n    constructor() {\n        coordinator = msg.sender;\n        registryIndex = 1; // ETH\n    }\n\n    function setRollup(address _rollup) public override onlyCoordinator {\n        rollup = _rollup;\n        emit RollupSet(_rollup);\n    }\n\n    function registerToken(address _token) public override {\n        require(\n            state[_token] == TokenRegistration.None,\n            \"Token already pending/ registered!\"\n        );\n        state[_token] = TokenRegistration.Pending;\n        emit TokenPending(_token);\n    }\n\n    function approveToken(address _token) public override onlyRollup {\n        require(\n            state[_token] == TokenRegistration.Pending,\n            \"Token is not pending registration!\"\n        );\n        registryIndex += 1;\n        registry[registryIndex] = _token;\n        state[_token] = TokenRegistration.Registered;\n        emit TokenRegistered(registryIndex);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"131:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nameLocation":"212:6:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"225:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":11,"name":"Transfer","nameLocation":"394:8:0","nodeType":"EventDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:0","nodeType":"VariableDeclaration","scope":11,"src":"403:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:0","nodeType":"VariableDeclaration","scope":11,"src":"425:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:0","nodeType":"VariableDeclaration","scope":11,"src":"445:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:0"},"src":"388:72:0"},{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"466:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":20,"name":"Approval","nameLocation":"625:8:0","nodeType":"EventDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:0","nodeType":"VariableDeclaration","scope":20,"src":"634:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:0","nodeType":"VariableDeclaration","scope":20,"src":"657:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:0","nodeType":"VariableDeclaration","scope":20,"src":"682:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:0"},"src":"619:78:0"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"703:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"794:2:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"820:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:0"},"scope":77,"src":"774:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"835:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"account","nameLocation":"939:7:0","nodeType":"VariableDeclaration","scope":34,"src":"931:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:0"},"scope":77,"src":"912:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"986:202:0","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:0","nodeType":"FunctionDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"to","nameLocation":"1219:2:0","nodeType":"VariableDeclaration","scope":44,"src":"1211:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nameLocation":"1231:6:0","nodeType":"VariableDeclaration","scope":44,"src":"1223:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1257:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:0"},"scope":77,"src":"1193:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1269:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"owner","nameLocation":"1565:5:0","nodeType":"VariableDeclaration","scope":54,"src":"1557:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1580:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1572:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1612:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:0"},"scope":77,"src":"1538:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1627:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"spender","nameLocation":"2299:7:0","nodeType":"VariableDeclaration","scope":64,"src":"2291:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount","nameLocation":"2316:6:0","nodeType":"VariableDeclaration","scope":64,"src":"2308:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"2342:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:0"},"scope":77,"src":"2274:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"2354:287:0","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":76,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"from","nameLocation":"2676:4:0","nodeType":"VariableDeclaration","scope":76,"src":"2668:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"to","nameLocation":"2690:2:0","nodeType":"VariableDeclaration","scope":76,"src":"2682:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"amount","nameLocation":"2702:6:0","nodeType":"VariableDeclaration","scope":76,"src":"2694:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":76,"src":"2728:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:0"},"scope":77,"src":"2646:88:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":78,"src":"202:2534:0","usedErrors":[]}],"src":"106:2631:0"},"id":0},"contracts/Rollup.sol":{"ast":{"absolutePath":"contracts/Rollup.sol","exportedSymbols":{"IERC20":[77],"ITokenRegistry":[370],"PoseidonT3":[387],"PoseidonT5":[398],"PoseidonT6":[409],"RollupNC":[190],"TokenRegistration":[374]},"id":191,"license":"GNU GPLv3","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"37:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":80,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":191,"sourceUnit":78,"src":"63:56:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ITokenRegistry.sol","file":"./interfaces/ITokenRegistry.sol","id":81,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":191,"sourceUnit":375,"src":"158:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/Poseidon.sol","file":"./libraries/Poseidon.sol","id":82,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":191,"sourceUnit":410,"src":"319:34:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"RollupNC","contractDependencies":[],"contractKind":"contract","documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"355:50:1","text":"@title implementation of Non-custodial rollup"},"fullyImplemented":true,"id":190,"linearizedBaseContracts":[190],"name":"RollupNC","nameLocation":"414:8:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"a7932794","id":87,"mutability":"mutable","name":"pendingDeposits","nameLocation":"569:15:1","nodeType":"VariableDeclaration","scope":190,"src":"534:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":86,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"534:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"7b103999","id":90,"mutability":"mutable","name":"registry","nameLocation":"612:8:1","nodeType":"VariableDeclaration","scope":190,"src":"590:30:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITokenRegistry_$370","typeString":"contract ITokenRegistry"},"typeName":{"id":89,"nodeType":"UserDefinedTypeName","pathNode":{"id":88,"name":"ITokenRegistry","nameLocations":["590:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":370,"src":"590:14:1"},"referencedDeclaration":370,"src":"590:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_ITokenRegistry_$370","typeString":"contract ITokenRegistry"}},"visibility":"public"},{"constant":false,"functionSelector":"9be7e83f","id":92,"mutability":"mutable","name":"balDepth","nameLocation":"642:8:1","nodeType":"VariableDeclaration","scope":190,"src":"627:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"412964ea","id":94,"mutability":"mutable","name":"txDepth","nameLocation":"671:7:1","nodeType":"VariableDeclaration","scope":190,"src":"656:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"58fa63ca","id":96,"mutability":"mutable","name":"ZERO","nameLocation":"699:4:1","nodeType":"VariableDeclaration","scope":190,"src":"684:19:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c34ca641","id":99,"mutability":"mutable","name":"zeroCache","nameLocation":"726:9:1","nodeType":"VariableDeclaration","scope":190,"src":"709:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":98,"nodeType":"ArrayTypeName","src":"709:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"fdab463d","id":101,"mutability":"mutable","name":"currentRoot","nameLocation":"757:11:1","nodeType":"VariableDeclaration","scope":190,"src":"742:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"0a009097","id":103,"mutability":"mutable","name":"coordinator","nameLocation":"789:11:1","nodeType":"VariableDeclaration","scope":190,"src":"774:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"774:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"426bf394","id":105,"mutability":"mutable","name":"depositQueueStart","nameLocation":"821:17:1","nodeType":"VariableDeclaration","scope":190,"src":"806:32:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"30810102","id":107,"mutability":"mutable","name":"depositQueueEnd","nameLocation":"859:15:1","nodeType":"VariableDeclaration","scope":190,"src":"844:30:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"67ef6785","id":109,"mutability":"mutable","name":"depositQueueSize","nameLocation":"893:16:1","nodeType":"VariableDeclaration","scope":190,"src":"880:29:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":108,"name":"uint8","nodeType":"ElementaryTypeName","src":"880:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"2882dd98","id":111,"mutability":"mutable","name":"depositSubtreeHeight","nameLocation":"928:20:1","nodeType":"VariableDeclaration","scope":190,"src":"915:33:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":110,"name":"uint8","nodeType":"ElementaryTypeName","src":"915:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"1b6a2481","id":113,"mutability":"mutable","name":"updateNumber","nameLocation":"969:12:1","nodeType":"VariableDeclaration","scope":190,"src":"954:27:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"954:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b02c43d0","id":117,"mutability":"mutable","name":"deposits","nameLocation":"1096:8:1","nodeType":"VariableDeclaration","scope":190,"src":"1061:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":116,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1061:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"b4c2f727","id":121,"mutability":"mutable","name":"updates","nameLocation":"1168:7:1","nodeType":"VariableDeclaration","scope":190,"src":"1133:42:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":120,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1141:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1133:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1152:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"55466c37","id":125,"mutability":"mutable","name":"withdraws","nameLocation":"1236:9:1","nodeType":"VariableDeclaration","scope":190,"src":"1204:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":124,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1204:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":123,"name":"bool","nodeType":"ElementaryTypeName","src":"1223:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"5dbaa701a7acef513f72a61799f7e50f4653f462b9f780d88d1b9bec89de2168","id":131,"name":"RegisteredToken","nameLocation":"1289:15:1","nodeType":"EventDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":false,"mutability":"mutable","name":"tokenType","nameLocation":"1313:9:1","nodeType":"VariableDeclaration","scope":131,"src":"1305:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"tokenContract","nameLocation":"1332:13:1","nodeType":"VariableDeclaration","scope":131,"src":"1324:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1304:42:1"},"src":"1283:64:1"},{"anonymous":false,"eventSelector":"595b7e310cd1b7e94b72db62a3257c5fa242cbca10740eb40ae49044f5dcff1f","id":141,"name":"RequestDeposit","nameLocation":"1358:14:1","nodeType":"EventDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"indexed":false,"mutability":"mutable","name":"pubkey","nameLocation":"1384:6:1","nodeType":"VariableDeclaration","scope":141,"src":"1373:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":134,"length":{"hexValue":"32","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1381:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1373:10:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1400:6:1","nodeType":"VariableDeclaration","scope":141,"src":"1392:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":false,"mutability":"mutable","name":"tokenType","nameLocation":"1416:9:1","nodeType":"VariableDeclaration","scope":141,"src":"1408:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1372:54:1"},"src":"1352:75:1"},{"anonymous":false,"eventSelector":"7ad6ae7051f4c9b784b701db259ca48d827eaf495f379a45a12f8216b8f0a9e9","id":149,"name":"ConfirmDeposit","nameLocation":"1438:14:1","nodeType":"EventDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"indexed":false,"mutability":"mutable","name":"oldRoot","nameLocation":"1461:7:1","nodeType":"VariableDeclaration","scope":149,"src":"1453:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1453:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":145,"indexed":false,"mutability":"mutable","name":"newRoot","nameLocation":"1478:7:1","nodeType":"VariableDeclaration","scope":149,"src":"1470:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1470:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":147,"indexed":false,"mutability":"mutable","name":"numAdded","nameLocation":"1493:8:1","nodeType":"VariableDeclaration","scope":149,"src":"1487:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":146,"name":"uint8","nodeType":"ElementaryTypeName","src":"1487:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1452:50:1"},"src":"1432:71:1"},{"anonymous":false,"eventSelector":"be4212065768908e69f6c63172b1d155abe731f87bfc61b83a5c3b93f12c853f","id":157,"name":"UpdatedState","nameLocation":"1514:12:1","nodeType":"EventDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"indexed":false,"mutability":"mutable","name":"currentRoot","nameLocation":"1535:11:1","nodeType":"VariableDeclaration","scope":157,"src":"1527:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1527:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":153,"indexed":false,"mutability":"mutable","name":"oldRoot","nameLocation":"1556:7:1","nodeType":"VariableDeclaration","scope":157,"src":"1548:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":false,"mutability":"mutable","name":"txRoot","nameLocation":"1573:6:1","nodeType":"VariableDeclaration","scope":157,"src":"1565:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1565:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1526:54:1"},"src":"1508:73:1"},{"anonymous":false,"eventSelector":"8c7cdad0d12a8db3e23561b42da6f10c8137914c97beff202213a410e1f520a3","id":163,"name":"Withdrawn","nameLocation":"1592:9:1","nodeType":"EventDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"indexed":false,"mutability":"mutable","name":"leaf","nameLocation":"1610:4:1","nodeType":"VariableDeclaration","scope":163,"src":"1602:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1602:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"1624:9:1","nodeType":"VariableDeclaration","scope":163,"src":"1616:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1601:33:1"},"src":"1586:49:1"},{"body":{"id":173,"nodeType":"Block","src":"1668:62:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1686:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1690:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1686:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":168,"name":"coordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1700:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1686:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1678:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1678:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"ExpressionStatement","src":"1678:34:1"},{"id":172,"nodeType":"PlaceholderStatement","src":"1722:1:1"}]},"id":174,"name":"onlyCoordinator","nameLocation":"1650:15:1","nodeType":"ModifierDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"1665:2:1"},"src":"1641:89:1","virtual":false,"visibility":"internal"},{"body":{"id":188,"nodeType":"Block","src":"1773:81:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":179,"name":"updates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"1791:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":181,"indexExpression":{"id":180,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1799:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1791:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"547820726f6f7420646f6573206e6f74206578697374","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1811:24:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8cf482b6a061426eb550d57979d334ab1211d785293ddcb97b473aad46614a6f","typeString":"literal_string \"Tx root does not exist\""},"value":"Tx root does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8cf482b6a061426eb550d57979d334ab1211d785293ddcb97b473aad46614a6f","typeString":"literal_string \"Tx root does not exist\""}],"id":178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1783:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1783:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":186,"nodeType":"ExpressionStatement","src":"1783:53:1"},{"id":187,"nodeType":"PlaceholderStatement","src":"1846:1:1"}]},"id":189,"name":"txTreeExists","nameLocation":"1745:12:1","nodeType":"ModifierDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"_root","nameLocation":"1766:5:1","nodeType":"VariableDeclaration","scope":189,"src":"1758:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1757:15:1"},"src":"1736:118:1","virtual":false,"visibility":"internal"}],"scope":191,"src":"405:12851:1","usedErrors":[]}],"src":"37:13219:1"},"id":1},"contracts/TokenRegistry.sol":{"ast":{"absolutePath":"contracts/TokenRegistry.sol","exportedSymbols":{"ITokenRegistry":[370],"TokenRegistration":[374],"TokenRegistry":[296]},"id":297,"license":"GNU GPLv3","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"37:24:2"},{"absolutePath":"contracts/interfaces/ITokenRegistry.sol","file":"./interfaces/ITokenRegistry.sol","id":193,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":375,"src":"63:41:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":195,"name":"ITokenRegistry","nameLocations":["243:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":370,"src":"243:14:2"},"id":196,"nodeType":"InheritanceSpecifier","src":"243:14:2"}],"canonicalName":"TokenRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"106:110:2","text":" @title Registry of ERC20 tokens that the Rollup can process\n @notice documented in ITokenRegistry"},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,370],"name":"TokenRegistry","nameLocation":"226:13:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":209,"nodeType":"Block","src":"349:75:2","statements":[{"expression":{"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":200,"name":"coordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"359:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"373:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"377:6:2","memberName":"sender","nodeType":"MemberAccess","src":"373:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"359:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":204,"nodeType":"ExpressionStatement","src":"359:24:2"},{"expression":{"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":205,"name":"registryIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"393:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"409:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"393:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":208,"nodeType":"ExpressionStatement","src":"393:17:2"}]},"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"264:66:2","text":" Instantiate the RollupNC's ERC20 Token Registry"},"id":210,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"346:2:2"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"349:0:2"},"scope":296,"src":"335:89:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[357],"body":{"id":226,"nodeType":"Block","src":"498:66:2","statements":[{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":218,"name":"rollup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"508:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":219,"name":"_rollup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"517:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"508:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":221,"nodeType":"ExpressionStatement","src":"508:16:2"},{"eventCall":{"arguments":[{"id":223,"name":"_rollup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"549:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":222,"name":"RollupSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"539:9:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"539:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"EmitStatement","src":"534:23:2"}]},"functionSelector":"763131a0","id":227,"implemented":true,"kind":"function","modifiers":[{"id":216,"kind":"modifierInvocation","modifierName":{"id":215,"name":"onlyCoordinator","nameLocations":["482:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":335,"src":"482:15:2"},"nodeType":"ModifierInvocation","src":"482:15:2"}],"name":"setRollup","nameLocation":"439:9:2","nodeType":"FunctionDefinition","overrides":{"id":214,"nodeType":"OverrideSpecifier","overrides":[],"src":"473:8:2"},"parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"_rollup","nameLocation":"457:7:2","nodeType":"VariableDeclaration","scope":227,"src":"449:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:17:2"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"498:0:2"},"scope":296,"src":"430:134:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[363],"body":{"id":254,"nodeType":"Block","src":"625:223:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":234,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"656:5:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenRegistration_$374_$","typeString":"mapping(address => enum TokenRegistration)"}},"id":236,"indexExpression":{"id":235,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"662:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"656:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":237,"name":"TokenRegistration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"673:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenRegistration_$374_$","typeString":"type(enum TokenRegistration)"}},"id":238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"691:4:2","memberName":"None","nodeType":"MemberAccess","referencedDeclaration":371,"src":"673:22:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"src":"656:39:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c72656164792070656e64696e672f207265676973746572656421","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"709:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3edb2dc9473b510b4ad11027d46550ac643ed307043f0a0eca3447277fde343c","typeString":"literal_string \"Token already pending/ registered!\""},"value":"Token already pending/ registered!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3edb2dc9473b510b4ad11027d46550ac643ed307043f0a0eca3447277fde343c","typeString":"literal_string \"Token already pending/ registered!\""}],"id":233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"635:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"635:120:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"635:120:2"},{"expression":{"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":243,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenRegistration_$374_$","typeString":"mapping(address => enum TokenRegistration)"}},"id":245,"indexExpression":{"id":244,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"771:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"765:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":246,"name":"TokenRegistration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"781:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenRegistration_$374_$","typeString":"type(enum TokenRegistration)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"799:7:2","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":372,"src":"781:25:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"src":"765:41:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"id":249,"nodeType":"ExpressionStatement","src":"765:41:2"},{"eventCall":{"arguments":[{"id":251,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"834:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":250,"name":"TokenPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"821:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"821:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"EmitStatement","src":"816:25:2"}]},"functionSelector":"09824a80","id":255,"implemented":true,"kind":"function","modifiers":[],"name":"registerToken","nameLocation":"579:13:2","nodeType":"FunctionDefinition","overrides":{"id":231,"nodeType":"OverrideSpecifier","overrides":[],"src":"616:8:2"},"parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"_token","nameLocation":"601:6:2","nodeType":"VariableDeclaration","scope":255,"src":"593:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"592:16:2"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"625:0:2"},"scope":296,"src":"570:278:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[369],"body":{"id":294,"nodeType":"Block","src":"919:309:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":264,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"950:5:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenRegistration_$374_$","typeString":"mapping(address => enum TokenRegistration)"}},"id":266,"indexExpression":{"id":265,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"956:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"950:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":267,"name":"TokenRegistration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"967:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenRegistration_$374_$","typeString":"type(enum TokenRegistration)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"985:7:2","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":372,"src":"967:25:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"src":"950:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973206e6f742070656e64696e6720726567697374726174696f6e21","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1006:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2fa44ad3e83165a2fafe75f6eec9a7234ed076da2395b59ddca80910952221d","typeString":"literal_string \"Token is not pending registration!\""},"value":"Token is not pending registration!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2fa44ad3e83165a2fafe75f6eec9a7234ed076da2395b59ddca80910952221d","typeString":"literal_string \"Token is not pending registration!\""}],"id":263,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"929:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"929:123:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":272,"nodeType":"ExpressionStatement","src":"929:123:2"},{"expression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":273,"name":"registryIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1062:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1079:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1062:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":276,"nodeType":"ExpressionStatement","src":"1062:18:2"},{"expression":{"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":277,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1090:8:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":279,"indexExpression":{"id":278,"name":"registryIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1099:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1090:23:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":280,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1116:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1090:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":282,"nodeType":"ExpressionStatement","src":"1090:32:2"},{"expression":{"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":283,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1132:5:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenRegistration_$374_$","typeString":"mapping(address => enum TokenRegistration)"}},"id":285,"indexExpression":{"id":284,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1138:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1132:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":286,"name":"TokenRegistration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1148:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenRegistration_$374_$","typeString":"type(enum TokenRegistration)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1166:10:2","memberName":"Registered","nodeType":"MemberAccess","referencedDeclaration":373,"src":"1148:28:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"src":"1132:44:2","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}},"id":289,"nodeType":"ExpressionStatement","src":"1132:44:2"},{"eventCall":{"arguments":[{"id":291,"name":"registryIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1207:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":290,"name":"TokenRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"1191:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1191:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":293,"nodeType":"EmitStatement","src":"1186:35:2"}]},"functionSelector":"80b2edd8","id":295,"implemented":true,"kind":"function","modifiers":[{"id":261,"kind":"modifierInvocation","modifierName":{"id":260,"name":"onlyRollup","nameLocations":["908:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":324,"src":"908:10:2"},"nodeType":"ModifierInvocation","src":"908:10:2"}],"name":"approveToken","nameLocation":"863:12:2","nodeType":"FunctionDefinition","overrides":{"id":259,"nodeType":"OverrideSpecifier","overrides":[],"src":"899:8:2"},"parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"_token","nameLocation":"884:6:2","nodeType":"VariableDeclaration","scope":295,"src":"876:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"875:16:2"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"919:0:2"},"scope":296,"src":"854:374:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":297,"src":"217:1013:2","usedErrors":[]}],"src":"37:1193:2"},"id":2},"contracts/interfaces/ITokenRegistry.sol":{"ast":{"absolutePath":"contracts/interfaces/ITokenRegistry.sol","exportedSymbols":{"ITokenRegistry":[370],"TokenRegistration":[374]},"id":375,"license":"GNU GPLv3","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"37:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ITokenRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"63:204:3","text":" @title Interface for a registry of ERC20 assets that can be locked into and traded withinn the rollup\n @dev registeredToken[0] is always the current EVM's native gas token (ether on ethereum)"},"fullyImplemented":false,"id":370,"linearizedBaseContracts":[370],"name":"ITokenRegistry","nameLocation":"286:14:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"307:14:3","text":"EVENTS ///"},"eventSelector":"7e8ce0bde07da6b99aedf3acf71a4ab99699f774d164be03d69bfe6d5a6f5272","id":304,"name":"RollupSet","nameLocation":"332:9:3","nodeType":"EventDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"indexed":false,"mutability":"mutable","name":"_rollup","nameLocation":"350:7:3","nodeType":"VariableDeclaration","scope":304,"src":"342:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"342:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"341:17:3"},"src":"326:33:3"},{"anonymous":false,"eventSelector":"750347718cf11f205b67495b45c5173447387523f3175c795ee6e1a2bbcdc350","id":308,"name":"TokenPending","nameLocation":"370:12:3","nodeType":"EventDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"indexed":false,"mutability":"mutable","name":"_token","nameLocation":"391:6:3","nodeType":"VariableDeclaration","scope":308,"src":"383:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"383:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"382:16:3"},"src":"364:35:3"},{"anonymous":false,"eventSelector":"d7aa35c4dfada1a1408fbca910f9d1a5fb7827f7f5e2ee3bafb5907d22c7c85e","id":312,"name":"TokenRegistered","nameLocation":"410:15:3","nodeType":"EventDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"indexed":false,"mutability":"mutable","name":"_index","nameLocation":"434:6:3","nodeType":"VariableDeclaration","scope":312,"src":"426:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:16:3"},"src":"404:38:3"},{"body":{"id":323,"nodeType":"Block","src":"568:56:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":316,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"585:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"589:6:3","memberName":"sender","nodeType":"MemberAccess","src":"585:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":318,"name":"rollup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"599:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"585:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":315,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"578:6:3","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"578:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"ExpressionStatement","src":"578:28:3"},{"id":322,"nodeType":"PlaceholderStatement","src":"616:1:3"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"448:17:3","text":"MODIFIERS ///"},"id":324,"name":"onlyRollup","nameLocation":"555:10:3","nodeType":"ModifierDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"565:2:3"},"src":"546:78:3","virtual":false,"visibility":"internal"},{"body":{"id":334,"nodeType":"Block","src":"734:61:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":327,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"751:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"755:6:3","memberName":"sender","nodeType":"MemberAccess","src":"751:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":329,"name":"coordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"765:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"751:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":326,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"744:6:3","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"744:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":332,"nodeType":"ExpressionStatement","src":"744:33:3"},{"id":333,"nodeType":"PlaceholderStatement","src":"787:1:3"}]},"id":335,"name":"onlyCoordinator","nameLocation":"716:15:3","nodeType":"ModifierDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"731:2:3"},"src":"707:88:3","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"801:17:3","text":"VARIABLES ///"},"functionSelector":"0a009097","id":338,"mutability":"mutable","name":"coordinator","nameLocation":"838:11:3","nodeType":"VariableDeclaration","scope":370,"src":"823:26:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cb23bcb5","id":340,"mutability":"mutable","name":"rollup","nameLocation":"904:6:3","nodeType":"VariableDeclaration","scope":370,"src":"889:21:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"31e658a5","id":345,"mutability":"mutable","name":"state","nameLocation":"992:5:3","nodeType":"VariableDeclaration","scope":370,"src":"947:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenRegistration_$374_$","typeString":"mapping(address => enum TokenRegistration)"},"typeName":{"id":344,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"947:37:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TokenRegistration_$374_$","typeString":"mapping(address => enum TokenRegistration)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":343,"nodeType":"UserDefinedTypeName","pathNode":{"id":342,"name":"TokenRegistration","nameLocations":["966:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":374,"src":"966:17:3"},"referencedDeclaration":374,"src":"966:17:3","typeDescriptions":{"typeIdentifier":"t_enum$_TokenRegistration_$374","typeString":"enum TokenRegistration"}}},"visibility":"public"},{"constant":false,"functionSelector":"5893253c","id":349,"mutability":"mutable","name":"registry","nameLocation":"1091:8:3","nodeType":"VariableDeclaration","scope":370,"src":"1056:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":348,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1056:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"d1f807d8","id":351,"mutability":"mutable","name":"registryIndex","nameLocation":"1170:13:3","nodeType":"VariableDeclaration","scope":370,"src":"1155:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"1264:234:3","text":" Set the address of the contract managing rollup state in a merkle tree\n @dev modifier onlyCoordinator\n @param _rollup - the contract address to designate as the rollup within the registry contract"},"functionSelector":"763131a0","id":357,"implemented":false,"kind":"function","modifiers":[],"name":"setRollup","nameLocation":"1512:9:3","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"_rollup","nameLocation":"1530:7:3","nodeType":"VariableDeclaration","scope":357,"src":"1522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1521:17:3"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"1553:0:3"},"scope":370,"src":"1503:51:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"1560:167:3","text":" Propose a new token be added to the roll-up's exchange network\n @param _token - the contract address of the ERC20 proposed for registry"},"functionSelector":"09824a80","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"registerToken","nameLocation":"1741:13:3","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"_token","nameLocation":"1763:6:3","nodeType":"VariableDeclaration","scope":363,"src":"1755:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:16:3"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"1785:0:3"},"scope":370,"src":"1732:54:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1792:201:3","text":" Centralized approval of ERC20 token registry requests\n @dev modifier onlyRollup\n @param _token - the contract address of the ERC20 to approve registry proposal for"},"functionSelector":"80b2edd8","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"approveToken","nameLocation":"2007:12:3","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"_token","nameLocation":"2028:6:3","nodeType":"VariableDeclaration","scope":369,"src":"2020:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2020:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2019:16:3"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2050:0:3"},"scope":370,"src":"1998:53:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":375,"src":"268:1785:3","usedErrors":[]},{"canonicalName":"TokenRegistration","id":374,"members":[{"id":371,"name":"None","nameLocation":"2080:4:3","nodeType":"EnumValue","src":"2080:4:3"},{"id":372,"name":"Pending","nameLocation":"2086:7:3","nodeType":"EnumValue","src":"2086:7:3"},{"id":373,"name":"Registered","nameLocation":"2095:10:3","nodeType":"EnumValue","src":"2095:10:3"}],"name":"TokenRegistration","nameLocation":"2060:17:3","nodeType":"EnumDefinition","src":"2055:52:3"}],"src":"37:2070:3"},"id":3},"contracts/libraries/Poseidon.sol":{"ast":{"absolutePath":"contracts/libraries/Poseidon.sol","exportedSymbols":{"PoseidonT3":[387],"PoseidonT5":[398],"PoseidonT6":[409]},"id":410,"license":"GNU GPLv3","nodeType":"SourceUnit","nodes":[{"id":376,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"37:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"PoseidonT3","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":387,"linearizedBaseContracts":[387],"name":"PoseidonT3","nameLocation":"135:10:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":385,"nodeType":"Block","src":"219:2:4","statements":[]},"functionSelector":"29a5f2f6","id":386,"implemented":true,"kind":"function","modifiers":[],"name":"poseidon","nameLocation":"161:8:4","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"170:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"170:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":379,"length":{"hexValue":"32","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"178:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"170:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"169:19:4"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"210:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"210:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"209:9:4"},"scope":387,"src":"152:69:4","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":410,"src":"127:96:4","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"PoseidonT5","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":398,"linearizedBaseContracts":[398],"name":"PoseidonT5","nameLocation":"312:10:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":396,"nodeType":"Block","src":"396:2:4","statements":[]},"functionSelector":"248f6677","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"poseidon","nameLocation":"338:8:4","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"347:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_memory_ptr","typeString":"uint256[4]"},"typeName":{"baseType":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":390,"length":{"hexValue":"34","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"355:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"ArrayTypeName","src":"347:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$4_storage_ptr","typeString":"uint256[4]"}},"visibility":"internal"}],"src":"346:19:4"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"387:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"386:9:4"},"scope":398,"src":"329:69:4","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":410,"src":"304:96:4","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"PoseidonT6","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":409,"linearizedBaseContracts":[409],"name":"PoseidonT6","nameLocation":"489:10:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":407,"nodeType":"Block","src":"573:2:4","statements":[]},"functionSelector":"4937a258","id":408,"implemented":true,"kind":"function","modifiers":[],"name":"poseidon","nameLocation":"515:8:4","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"524:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_memory_ptr","typeString":"uint256[5]"},"typeName":{"baseType":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":401,"length":{"hexValue":"35","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"532:1:4","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"ArrayTypeName","src":"524:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$5_storage_ptr","typeString":"uint256[5]"}},"visibility":"internal"}],"src":"523:19:4"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"564:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"563:9:4"},"scope":409,"src":"506:69:4","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":410,"src":"481:96:4","usedErrors":[]}],"src":"37:540:4"},"id":4}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Rollup.sol":{"RollupNC":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldRoot","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newRoot","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"numAdded","type":"uint8"}],"name":"ConfirmDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenType","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenContract","type":"address"}],"name":"RegisteredToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256[2]","name":"pubkey","type":"uint256[2]"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenType","type":"uint256"}],"name":"RequestDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"currentRoot","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oldRoot","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"txRoot","type":"uint256"}],"name":"UpdatedState","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"leaf","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"ZERO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"balDepth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"coordinator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentRoot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositQueueEnd","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositQueueSize","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositQueueStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositSubtreeHeight","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pendingDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract ITokenRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"txDepth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"updateNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"updates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraws","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"zeroCache","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"implementation of Non-custodial rollup","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506102dc806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806367ef678511610097578063b02c43d011610066578063b02c43d014610210578063b4c2f72714610230578063c34ca64114610250578063fdab463d1461026357600080fd5b806367ef6785146101c75780637b103999146101d45780639be7e83f146101e7578063a7932794146101f057600080fd5b8063412964ea116100d3578063412964ea14610179578063426bf3941461018257806355466c371461018b57806358fa63ca146101be57600080fd5b80630a009097146101055780631b6a2481146101355780632882dd981461014c5780633081010214610170575b600080fd5b600754610118906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013e600b5481565b60405190815260200161012c565b600a5461015e90610100900460ff1681565b60405160ff909116815260200161012c565b61013e60095481565b61013e60035481565b61013e60085481565b6101ae61019936600461028d565b600e6020526000908152604090205460ff1681565b604051901515815260200161012c565b61013e60045481565b600a5461015e9060ff1681565b600154610118906001600160a01b031681565b61013e60025481565b61013e6101fe36600461028d565b60006020819052908152604090205481565b61013e61021e36600461028d565b600c6020526000908152604090205481565b61013e61023e36600461028d565b600d6020526000908152604090205481565b61013e61025e36600461028d565b61026c565b61013e60065481565b6005818154811061027c57600080fd5b600091825260209091200154905081565b60006020828403121561029f57600080fd5b503591905056fea2646970667358221220579bdcc5b539f0949d0c85b0026c63ea31a2fa8f094b692bcaba7a044824693164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67EF6785 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB02C43D0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xB4C2F727 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xC34CA641 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xFDAB463D EQ PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67EF6785 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x9BE7E83F EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xA7932794 EQ PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x412964EA GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x412964EA EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x426BF394 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x55466C37 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x58FA63CA EQ PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA009097 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x1B6A2481 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x2882DD98 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x30810102 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x15E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x13E PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x13E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x15E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH2 0x13E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SWAP12 0xDC 0xC5 0xB5 CODECOPY CREATE SWAP5 SWAP14 0xC DUP6 0xB0 MUL PUSH13 0x63EA31A2FA8F094B692BCABA7A DIV BASEFEE 0x24 PUSH10 0x3164736F6C6343000813 STOP CALLER ","sourceMap":"405:12851:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ZERO_96":{"entryPoint":null,"id":96,"parameterSlots":0,"returnSlots":0},"@balDepth_92":{"entryPoint":null,"id":92,"parameterSlots":0,"returnSlots":0},"@coordinator_103":{"entryPoint":null,"id":103,"parameterSlots":0,"returnSlots":0},"@currentRoot_101":{"entryPoint":null,"id":101,"parameterSlots":0,"returnSlots":0},"@depositQueueEnd_107":{"entryPoint":null,"id":107,"parameterSlots":0,"returnSlots":0},"@depositQueueSize_109":{"entryPoint":null,"id":109,"parameterSlots":0,"returnSlots":0},"@depositQueueStart_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":0},"@depositSubtreeHeight_111":{"entryPoint":null,"id":111,"parameterSlots":0,"returnSlots":0},"@deposits_117":{"entryPoint":null,"id":117,"parameterSlots":0,"returnSlots":0},"@pendingDeposits_87":{"entryPoint":null,"id":87,"parameterSlots":0,"returnSlots":0},"@registry_90":{"entryPoint":null,"id":90,"parameterSlots":0,"returnSlots":0},"@txDepth_94":{"entryPoint":null,"id":94,"parameterSlots":0,"returnSlots":0},"@updateNumber_113":{"entryPoint":null,"id":113,"parameterSlots":0,"returnSlots":0},"@updates_121":{"entryPoint":null,"id":121,"parameterSlots":0,"returnSlots":0},"@withdraws_125":{"entryPoint":null,"id":125,"parameterSlots":0,"returnSlots":0},"@zeroCache_99":{"entryPoint":620,"id":99,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_uint256":{"entryPoint":653,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ITokenRegistry_$370__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1197:5","statements":[{"nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:5","statements":[{"nodeType":"YulAssignment","src":"125:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:5"},"nodeType":"YulFunctionCall","src":"133:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:5"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:5"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:5"},"nodeType":"YulFunctionCall","src":"194:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:5"},"nodeType":"YulFunctionCall","src":"190:19:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:5"},"nodeType":"YulFunctionCall","src":"178:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:5"},"nodeType":"YulFunctionCall","src":"160:51:5"},"nodeType":"YulExpressionStatement","src":"160:51:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:5","type":""}],"src":"14:203:5"},{"body":{"nodeType":"YulBlock","src":"323:76:5","statements":[{"nodeType":"YulAssignment","src":"333:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"345:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"356:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"341:3:5"},"nodeType":"YulFunctionCall","src":"341:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"333:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"375:9:5"},{"name":"value0","nodeType":"YulIdentifier","src":"386:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"368:6:5"},"nodeType":"YulFunctionCall","src":"368:25:5"},"nodeType":"YulExpressionStatement","src":"368:25:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"292:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"303:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"314:4:5","type":""}],"src":"222:177:5"},{"body":{"nodeType":"YulBlock","src":"501:87:5","statements":[{"nodeType":"YulAssignment","src":"511:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"523:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"534:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"519:3:5"},"nodeType":"YulFunctionCall","src":"519:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"511:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:5"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"568:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"576:4:5","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"564:3:5"},"nodeType":"YulFunctionCall","src":"564:17:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"546:6:5"},"nodeType":"YulFunctionCall","src":"546:36:5"},"nodeType":"YulExpressionStatement","src":"546:36:5"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"470:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"481:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"492:4:5","type":""}],"src":"404:184:5"},{"body":{"nodeType":"YulBlock","src":"663:110:5","statements":[{"body":{"nodeType":"YulBlock","src":"709:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"718:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"721:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"711:6:5"},"nodeType":"YulFunctionCall","src":"711:12:5"},"nodeType":"YulExpressionStatement","src":"711:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"684:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"693:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"680:3:5"},"nodeType":"YulFunctionCall","src":"680:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"705:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"676:3:5"},"nodeType":"YulFunctionCall","src":"676:32:5"},"nodeType":"YulIf","src":"673:52:5"},{"nodeType":"YulAssignment","src":"734:33:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"757:9:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"744:12:5"},"nodeType":"YulFunctionCall","src":"744:23:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"734:6:5"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"629:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"640:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"652:6:5","type":""}],"src":"593:180:5"},{"body":{"nodeType":"YulBlock","src":"873:92:5","statements":[{"nodeType":"YulAssignment","src":"883:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"895:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"906:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"891:3:5"},"nodeType":"YulFunctionCall","src":"891:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"883:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"925:9:5"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"950:6:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"943:6:5"},"nodeType":"YulFunctionCall","src":"943:14:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"936:6:5"},"nodeType":"YulFunctionCall","src":"936:22:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"918:6:5"},"nodeType":"YulFunctionCall","src":"918:41:5"},"nodeType":"YulExpressionStatement","src":"918:41:5"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"842:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"853:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"864:4:5","type":""}],"src":"778:187:5"},{"body":{"nodeType":"YulBlock","src":"1093:102:5","statements":[{"nodeType":"YulAssignment","src":"1103:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1115:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1126:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1111:3:5"},"nodeType":"YulFunctionCall","src":"1111:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1103:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1145:9:5"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1160:6:5"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1176:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1181:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1172:3:5"},"nodeType":"YulFunctionCall","src":"1172:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"1185:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1168:3:5"},"nodeType":"YulFunctionCall","src":"1168:19:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1156:3:5"},"nodeType":"YulFunctionCall","src":"1156:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1138:6:5"},"nodeType":"YulFunctionCall","src":"1138:51:5"},"nodeType":"YulExpressionStatement","src":"1138:51:5"}]},"name":"abi_encode_tuple_t_contract$_ITokenRegistry_$370__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1062:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1073:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1084:4:5","type":""}],"src":"970:225:5"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_ITokenRegistry_$370__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806367ef678511610097578063b02c43d011610066578063b02c43d014610210578063b4c2f72714610230578063c34ca64114610250578063fdab463d1461026357600080fd5b806367ef6785146101c75780637b103999146101d45780639be7e83f146101e7578063a7932794146101f057600080fd5b8063412964ea116100d3578063412964ea14610179578063426bf3941461018257806355466c371461018b57806358fa63ca146101be57600080fd5b80630a009097146101055780631b6a2481146101355780632882dd981461014c5780633081010214610170575b600080fd5b600754610118906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013e600b5481565b60405190815260200161012c565b600a5461015e90610100900460ff1681565b60405160ff909116815260200161012c565b61013e60095481565b61013e60035481565b61013e60085481565b6101ae61019936600461028d565b600e6020526000908152604090205460ff1681565b604051901515815260200161012c565b61013e60045481565b600a5461015e9060ff1681565b600154610118906001600160a01b031681565b61013e60025481565b61013e6101fe36600461028d565b60006020819052908152604090205481565b61013e61021e36600461028d565b600c6020526000908152604090205481565b61013e61023e36600461028d565b600d6020526000908152604090205481565b61013e61025e36600461028d565b61026c565b61013e60065481565b6005818154811061027c57600080fd5b600091825260209091200154905081565b60006020828403121561029f57600080fd5b503591905056fea2646970667358221220579bdcc5b539f0949d0c85b0026c63ea31a2fa8f094b692bcaba7a044824693164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67EF6785 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB02C43D0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0xB4C2F727 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xC34CA641 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xFDAB463D EQ PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67EF6785 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x9BE7E83F EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xA7932794 EQ PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x412964EA GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x412964EA EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x426BF394 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x55466C37 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x58FA63CA EQ PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA009097 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x1B6A2481 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x2882DD98 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x30810102 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x15E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x13E PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C JUMP JUMPDEST PUSH2 0x13E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x15E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x118 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x28D JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH2 0x13E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SWAP12 0xDC 0xC5 0xB5 CODECOPY CREATE SWAP5 SWAP14 0xC DUP6 0xB0 MUL PUSH13 0x63EA31A2FA8F094B692BCABA7A DIV BASEFEE 0x24 PUSH10 0x3164736F6C6343000813 STOP CALLER ","sourceMap":"405:12851:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;774:26;;;;;-1:-1:-1;;;;;774:26:1;;;;;;-1:-1:-1;;;;;178:32:5;;;160:51;;148:2;133:18;774:26:1;;;;;;;;954:27;;;;;;;;;368:25:5;;;356:2;341:18;954:27:1;222:177:5;915:33:1;;;;;;;;;;;;;;;576:4:5;564:17;;;546:36;;534:2;519:18;915:33:1;404:184:5;844:30:1;;;;;;656:22;;;;;;806:32;;;;;;1204:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;943:14:5;;936:22;918:41;;906:2;891:18;1204:41:1;778:187:5;684:19:1;;;;;;880:29;;;;;;;;;590:30;;;;;-1:-1:-1;;;;;590:30:1;;;627:23;;;;;;534:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;1061:43;;;;;;:::i;:::-;;;;;;;;;;;;;;1133:42;;;;;;:::i;:::-;;;;;;;;;;;;;;709:26;;;;;;:::i;:::-;;:::i;742:::-;;;;;;709;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;709:26:1;:::o;593:180:5:-;652:6;705:2;693:9;684:7;680:23;676:32;673:52;;;721:1;718;711:12;673:52;-1:-1:-1;744:23:5;;593:180;-1:-1:-1;593:180:5:o"},"gasEstimates":{"creation":{"codeDepositCost":"146400","executionCost":"190","totalCost":"146590"},"external":{"ZERO()":"2384","balDepth()":"2362","coordinator()":"2350","currentRoot()":"2383","depositQueueEnd()":"2385","depositQueueSize()":"2336","depositQueueStart()":"2340","depositSubtreeHeight()":"2392","deposits(uint256)":"2460","pendingDeposits(uint256)":"2530","registry()":"2371","txDepth()":"2318","updateNumber()":"2341","updates(uint256)":"2482","withdraws(uint256)":"2517","zeroCache(uint256)":"4641"}},"methodIdentifiers":{"ZERO()":"58fa63ca","balDepth()":"9be7e83f","coordinator()":"0a009097","currentRoot()":"fdab463d","depositQueueEnd()":"30810102","depositQueueSize()":"67ef6785","depositQueueStart()":"426bf394","depositSubtreeHeight()":"2882dd98","deposits(uint256)":"b02c43d0","pendingDeposits(uint256)":"a7932794","registry()":"7b103999","txDepth()":"412964ea","updateNumber()":"1b6a2481","updates(uint256)":"b4c2f727","withdraws(uint256)":"55466c37","zeroCache(uint256)":"c34ca641"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRoot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRoot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"numAdded\",\"type\":\"uint8\"}],\"name\":\"ConfirmDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"RegisteredToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"pubkey\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"RequestDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentRoot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRoot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"txRoot\",\"type\":\"uint256\"}],\"name\":\"UpdatedState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leaf\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZERO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositQueueEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositQueueSize\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositQueueStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositSubtreeHeight\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract ITokenRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"updates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraws\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zeroCache\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"implementation of Non-custodial rollup\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Rollup.sol\":\"RollupNC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Rollup.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n// import './interfaces/IRollup.sol';\\nimport \\\"./interfaces/ITokenRegistry.sol\\\";\\n// import \\\"./interfaces/IVerifier.sol\\\";\\n// import { UnpackedProof, PackedProofs } from \\\"./libraries/PackedProofs.sol\\\";\\nimport \\\"./libraries/Poseidon.sol\\\";\\n\\n/// @title implementation of Non-custodial rollup\\ncontract RollupNC {\\n\\n    // IUSV public usv; // update state verifier\\n    // IWSV public wsv; // withdraw signature verifier\\n    mapping(uint256 => uint256) public pendingDeposits;\\n    ITokenRegistry public registry;\\n\\n    uint256 public balDepth;\\n    uint256 public txDepth;\\n    uint256 public ZERO;\\n    uint256[] public zeroCache;\\n\\n    uint256 public currentRoot;\\n    address public coordinator;\\n    uint256 public depositQueueStart;\\n    uint256 public depositQueueEnd;\\n    uint8 public depositQueueSize;\\n    uint8 public depositSubtreeHeight;\\n    uint256 public updateNumber;\\n\\n    // (queueNumber => [pubkey_x, pubkey_y, balance, nonce, token_type])\\n    mapping(uint256 => uint256) public deposits; //leaf idx => leafHash\\n    mapping(uint256 => uint256) public updates; //txRoot => update idx\\n    mapping(uint256 => bool) public withdraws; // txLeaf => true if withdrawn\\n\\n    event RegisteredToken(uint256 tokenType, address tokenContract);\\n    event RequestDeposit(uint256[2] pubkey, uint256 amount, uint256 tokenType);\\n    event ConfirmDeposit(uint256 oldRoot, uint256 newRoot, uint8 numAdded);\\n    event UpdatedState(uint256 currentRoot, uint256 oldRoot, uint256 txRoot);\\n    event Withdrawn(uint256 leaf, address recipient);\\n\\n    modifier onlyCoordinator() {\\n        require(msg.sender == coordinator);\\n        _;\\n    }\\n\\n    modifier txTreeExists(uint256 _root) {\\n        require(updates[_root] > 0, \\\"Tx root does not exist\\\");\\n        _;\\n    }\\n    \\n    // /// @dev construct a new non-custodial on-chain rollup\\n    // /// @param _addresses: array of addresses used in the rollup contract\\n    // ///   [0]: Update State Verifier contract\\n    // ///   [1]: Withdrawal Signature Verifier contract\\n    // ///   [2]: Rollup token registry contract\\n    // /// @param _depth: depth of trees\\n    // ///   [0]: Balance tree max depth\\n    // ///   [1]: Tx tree max depth\\n    // /// @param _zero: the value to use for an empty leaf in a merkle tree\\n    // /// @param _zeroCache: array of precomputed roots for zero's at different heights\\n    // constructor(\\n    //     address[3] memory _addresses,\\n    //     uint256[2] memory _depth,\\n    //     uint256 _zero,\\n    //     uint256[] memory _zeroCache\\n    // ) {\\n    //     require(_depth[0] + 1 == _zeroCache.length, \\\"Param size mismatch\\\");\\n    //     // assign contract references\\n    //     // usv = IUSV(_addresses[0]);\\n    //     // wsv = IWSV(_addresses[1]);\\n    //     registry = ITokenRegistry(_addresses[2]);\\n\\n    //     // assign primative variables\\n    //     balDepth = _depth[0];\\n    //     txDepth = _depth[1];\\n    //     ZERO = _zero;\\n    //     zeroCache = _zeroCache;\\n    //     currentRoot = zeroCache[balDepth];\\n    //     coordinator = msg.sender;\\n    // }\\n\\n    // /**\\n    //  * Commit a batch of L2 transactions to L1 state by proving correctness\\n    //  *\\n    //  * @param _proof - packed representation of zero knowledge proof of valid state change\\n    //  * @param _txRoot - merkle root storing the transactions mutating currentRoot to _nextRoot\\n    //  * @param _nextRoot - the balance tree root after applying _txRoot\\n    //  */\\n    // function updateState(\\n    //     uint256[8] memory _proof,\\n    //     uint256 _txRoot,\\n    //     uint256 _nextRoot\\n    // ) public onlyCoordinator {\\n    //     // validate state change via zk proof\\n    //     uint256[2] memory a = [_proof[0], _proof[1]];\\n    //     uint256[2] memory b_0 = [_proof[2], _proof[3]];\\n    //     uint256[2] memory b_1 = [_proof[4], _proof[5]];\\n    //     uint256[2] memory c = [_proof[6], _proof[7]];\\n    //     uint256[3] memory input = [_txRoot, currentRoot, _nextRoot];\\n    //     require(usv.verifyProof(a, [b_0, b_1], c, input), \\\"SNARK proof is invalid\\\");\\n    //     // update merkle root\\n    //     uint256 prev = currentRoot;\\n    //     currentRoot = _nextRoot;\\n    //     updateNumber++;\\n    //     updates[_txRoot] = updateNumber;\\n    //     emit UpdatedState(currentRoot, prev, _txRoot); //newRoot, txRoot, oldRoot\\n    // }\\n\\n    // // user tries to deposit ERC20 tokens\\n    // function deposit(\\n    //     uint256[2] memory pubkey,\\n    //     uint256 amount,\\n    //     uint256 tokenType\\n    // ) public payable {\\n    //     // Ensure token can be transferred\\n    //     checkToken(amount, tokenType);\\n    //     // Store deposit leaf\\n    //     uint256 depositHash = PoseidonT6.poseidon(\\n    //         [pubkey[0], pubkey[1], amount, uint256(0), tokenType]\\n    //     );\\n    //     pendingDeposits[depositQueueEnd] = depositHash;\\n    //     depositQueueEnd++;\\n    //     depositQueueSize++;\\n    //     // Generate\\n    //     uint8 tmpDepositSubtreeHeight = 0;\\n    //     uint256 tmp = depositQueueSize;\\n    //     while (tmp % 2 == 0) {\\n    //         // while leafs can be hashed into merkle tree, generate a higher order internal node\\n    //         pendingDeposits[depositQueueEnd - 2] = PoseidonT3.poseidon(\\n    //             [\\n    //                 pendingDeposits[depositQueueEnd - 2],\\n    //                 pendingDeposits[depositQueueEnd - 1]\\n    //             ]\\n    //         );\\n    //         removeDeposit(false);\\n    //         tmp = tmp / 2;\\n    //         tmpDepositSubtreeHeight++;\\n    //     }\\n    //     if (tmpDepositSubtreeHeight > depositSubtreeHeight) {\\n    //         depositSubtreeHeight = tmpDepositSubtreeHeight;\\n    //     }\\n    //     emit RequestDeposit(pubkey, amount, tokenType);\\n    // }\\n\\n    // // // coordinator adds certain number of deposits to balance tree\\n    // // // coordinator must specify subtree index in the tree since the deposits\\n    // // // are being inserted at a nonzero height\\n    // function processDeposits(\\n    //     uint256 subtreeDepth,\\n    //     uint256[] memory subtreePosition,\\n    //     uint256[] memory subtreeProof\\n    // ) public onlyCoordinator returns (uint256) {\\n    //     // ensure subtree specified is empty\\n    //     uint256 emptyRoot = zeroCache[subtreeDepth];\\n    //     require(\\n    //         currentRoot ==\\n    //             getRootFromProof(emptyRoot, subtreePosition, subtreeProof),\\n    //         \\\"specified subtree is not empty\\\"\\n    //     );\\n    //     // insert multiple leafs (insert subtree) by computing new root\\n    //     uint256 oldRoot = currentRoot;\\n    //     currentRoot = getRootFromProof(\\n    //         pendingDeposits[depositQueueStart],\\n    //         subtreePosition,\\n    //         subtreeProof\\n    //     );\\n    //     removeDeposit(true);\\n    //     uint8 numAdded = uint8(2**depositSubtreeHeight);\\n    //     depositQueueSize -= numAdded;\\n    //     // set deposit subtree height\\n    //     depositSubtreeHeight = 0;\\n    //     uint256 tmp = depositQueueSize;\\n    //     while(tmp / 2 > 0) {\\n    //         depositSubtreeHeight += 1;\\n    //         tmp = tmp / 2;\\n    //     }\\n    //     emit ConfirmDeposit(oldRoot, currentRoot, numAdded);\\n    //     return currentRoot;\\n    // }\\n\\n    // /**\\n    //  * Withdraw a \\n    //  */\\n    // function withdraw(\\n    //     uint256[8] memory _tx, //[fromX, fromY, fromIndex, toX ,toY, nonce, amount, token_type_from, txRoot]\\n    //     uint256 _txRoot,\\n    //     uint256[] memory _txPosition,\\n    //     uint256[] memory _txProof,\\n    //     address payable _recipient,\\n    //     uint256[8] memory _proof\\n    // ) public txTreeExists(_txRoot) {\\n    //     require(_tx[7] > 0, \\\"invalid tokenType\\\");\\n    //     uint256 leaf = PoseidonT3.poseidon([\\n    //         PoseidonT5.poseidon([_tx[0], _tx[1], _tx[2], _tx[3]]), \\n    //         PoseidonT5.poseidon([_tx[4], _tx[5], _tx[6], _tx[7]])\\n    //     ]);\\n    //     require(!withdraws[leaf], \\\"Tx already withdrawn\\\");\\n    //     require(\\n    //         _txRoot == getRootFromProof(leaf, _txPosition, _txProof),\\n    //         \\\"tx does not exist in given transaction tree\\\"\\n    //     );\\n    //     // validate state change via zk proof\\n    //     uint256[4] memory input = [_tx[0], _tx[1], uint256(uint160(address(_recipient))), _tx[5]];\\n    //     require(\\n    //         wsv.verifyProof(\\n    //             [_proof[0], _proof[1]], \\n    //             [[_proof[2], _proof[3]], [_proof[4], _proof[5]]],\\n    //             [_proof[6], _proof[7]],\\n    //             input\\n    //         ),\\n    //         \\\"eddsa signature is not valid\\\"\\n    //     );\\n\\n    //     // transfer token on tokenContract\\n    //     if (_tx[7] == 1) {\\n    //         // ETH\\n    //         _recipient.transfer(_tx[6]);\\n    //     } else {\\n    //         // ERC20\\n    //         address erc20 = registry.registry(_tx[7]);\\n    //         require(\\n    //             IERC20(erc20).transfer(_recipient, _tx[6]),\\n    //             \\\"transfer failed\\\"\\n    //         );\\n    //     }\\n    //     emit Withdrawn(leaf, _recipient);\\n    // }\\n\\n    // //call methods on TokenRegistry contract\\n\\n    // function registerToken(address _token) public {\\n    //     registry.registerToken(_token);\\n    // }\\n\\n    // function approveToken(address _token) public onlyCoordinator {\\n    //     registry.approveToken(_token);\\n    //     emit RegisteredToken(registry.registryIndex(), _token);\\n    // }\\n\\n    // /// INTERNAL FUNCTIONS ///\\n\\n    // /**\\n    //  * Ensures a token can be deposited by the message sender\\n    //  * @dev throws error if checks are failed\\n    //  * @param _amount - the amount of tokens attempting to transfer\\n    //  * @param _type - the token's registry index\\n    //  */\\n    // function checkToken(uint256 _amount, uint256 _type) internal {\\n    //     if (_type == 0) {\\n    //         require(\\n    //             msg.sender == coordinator,\\n    //             \\\"tokenType 0 is reserved for coordinator\\\"\\n    //         );\\n    //         require(\\n    //             _amount == 0 && msg.value == 0,\\n    //             \\\"tokenType 0 does not have real value\\\"\\n    //         );\\n    //     } else if (_type == 1) {\\n    //         require(\\n    //             msg.value > 0 && msg.value >= _amount,\\n    //             \\\"msg.value must at least equal stated amount in wei\\\"\\n    //         );\\n    //     } else if (_type > 1) {\\n    //         require(_amount > 0, \\\"token deposit must be greater than 0\\\");\\n    //         address tokenAddress = registry.registry(_type);\\n    //         require(\\n    //             IERC20(tokenAddress).transferFrom(\\n    //                 msg.sender,\\n    //                 address(this),\\n    //                 _amount\\n    //             ),\\n    //             \\\"token transfer not approved\\\"\\n    //         );\\n    //     }\\n    // }\\n\\n    // /**\\n    //  * Remove a deposit in either a FIFO or LIFO manner\\n    //  * @param _fifo - if true, remove the oldest element (tallest subtree). else remove the newest element\\n    //  */\\n    // function removeDeposit(bool _fifo) internal {\\n    //     if (_fifo) {\\n    //         // remove tallest perfect subtree\\n    //         delete pendingDeposits[depositQueueStart];\\n    //         depositQueueStart += 1;\\n    //     } else {\\n    //         // remove last inserted entry\\n    //         delete pendingDeposits[depositQueueEnd - 1];\\n    //         depositQueueEnd -= 1;\\n    //     }\\n    // }\\n\\n    // /**\\n    //  * Describe the subtrees for balance tree build in deposit queue\\n    //  *\\n    //  * @return _leaves - the node value\\n    //  * @return _heights - the node height in the tree\\n    //  */\\n    // function describeDeposits()\\n    //     public\\n    //     view\\n    //     returns (uint256[] memory _leaves, uint256[] memory _heights)\\n    // {\\n    //     // create return variables\\n    //     uint256 num = depositQueueEnd - depositQueueStart; // number of entries in deposit queue\\n    //     _leaves = new uint256[](num);\\n    //     _heights = new uint256[](num);\\n    //     // compute height\\n    //     uint8 _i = 0; // track insert index, should always be safe\\n    //     for (uint256 i = 1; i <= depositSubtreeHeight; i++) {\\n    //         if ((depositQueueSize & (uint256(1) << i)) > 0) _heights[_i++] = i;\\n    //     }\\n    //     // store leaves\\n    //     for (uint256 i = 0; i < num; i++)\\n    //         _leaves[i] = pendingDeposits[depositQueueStart + i];\\n    // }\\n\\n    // /**\\n    //  * Generate a merkle root from a given proof\\n    //  * @notice uses poseidon hash function\\n    //  * @dev does not prove membership - returned root must be compared to stored state\\n    //  *\\n    //  * @param _leaf - the item being checked for membership\\n    //  * @param _position - the path of the leaf in the tree\\n    //  * @param _proof - the sibling nodes at any given height in the tree\\n    //  */\\n    // function getRootFromProof(\\n    //     uint256 _leaf,\\n    //     uint256[] memory _position,\\n    //     uint256[] memory _proof\\n    // ) public pure returns (uint256) {\\n    //     uint256 hash = _leaf;\\n    //     for (uint8 i = 0; i < _proof.length; i++) {\\n    //         if (_position[i] == 0)\\n    //             hash = PoseidonT3.poseidon([hash, _proof[i]]);\\n    //         else hash = PoseidonT3.poseidon([_proof[i], hash]);\\n    //     }\\n    //     return hash;\\n    // }\\n}\",\"keccak256\":\"0xf2ddc6e9793a093af079af28c10c5bd001c91a1e49f24ce1e3a6359e0c4404de\",\"license\":\"GNU GPLv3\"},\"contracts/interfaces/ITokenRegistry.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\n/**\\n * @title Interface for a registry of ERC20 assets that can be locked into and traded withinn the rollup\\n * @dev registeredToken[0] is always the current EVM's native gas token (ether on ethereum)\\n */\\nabstract contract ITokenRegistry {\\n    /// EVENTS ///\\n    event RollupSet(address _rollup);\\n    event TokenPending(address _token);\\n    event TokenRegistered(uint256 _index);\\n\\n    /// MODIFIERS ///\\n    /* Ensure a function can only be called by the rollup smart contract */\\n    modifier onlyRollup() {\\n        assert(msg.sender == rollup);\\n        _;\\n    }\\n\\n    /* Ensure a function can only be called by the permissioned sequencer */\\n    modifier onlyCoordinator() {\\n        assert(msg.sender == coordinator);\\n        _;\\n    }\\n\\n    /// VARIABLES ///\\n    address public coordinator; // permissioned sequencer address\\n    address public rollup; // merkle state CRUD contract\\n\\n    mapping(address => TokenRegistration) public state; // map erc20 tokens to their state within the rollup\\n    mapping(uint256 => address) public registry; // index of registered ERC20 tokens on the rollup\\n    uint256 public registryIndex; // boundary of registery (alternatively: numTokens)\\n\\n    /// FUNCTIONS ///\\n    /**\\n     * Set the address of the contract managing rollup state in a merkle tree\\n     * @dev modifier onlyCoordinator\\n     *\\n     * @param _rollup - the contract address to designate as the rollup within the registry contract\\n     */\\n    function setRollup(address _rollup) public virtual;\\n\\n    /**\\n     * Propose a new token be added to the roll-up's exchange network\\n     *\\n     * @param _token - the contract address of the ERC20 proposed for registry\\n     */\\n    function registerToken(address _token) public virtual;\\n\\n    /**\\n     * Centralized approval of ERC20 token registry requests\\n     * @dev modifier onlyRollup\\n     *\\n     * @param _token - the contract address of the ERC20 to approve registry proposal for\\n     */\\n    function approveToken(address _token) public virtual;\\n}\\n\\nenum TokenRegistration { None, Pending, Registered }\",\"keccak256\":\"0x194df75a11fc262d1e95692e0cffbd97c1825884ae1ca0b71913f19f9ff0fe85\",\"license\":\"GNU GPLv3\"},\"contracts/libraries/Poseidon.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\n/* Reference Poseidon hasher library contract using 2 inputs */\\nlibrary PoseidonT3 {\\n    function poseidon(uint256[2] memory) public pure returns (uint256) {}\\n}\\n\\n/* Reference Poseidon hasher library contract using 4 inputs (account hash) */\\nlibrary PoseidonT5 {\\n    function poseidon(uint256[4] memory) public pure returns (uint256) {}\\n}\\n\\n/* Reference Poseidon hasher library contract using 5 inputs (account hash) */\\nlibrary PoseidonT6 {\\n    function poseidon(uint256[5] memory) public pure returns (uint256) {}\\n}\",\"keccak256\":\"0x3ff51da19073f6a325bce4f1076ce9f4102cfaa396bfbaafd071c4efc11cdace\",\"license\":\"GNU GPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":87,"contract":"contracts/Rollup.sol:RollupNC","label":"pendingDeposits","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_uint256)"},{"astId":90,"contract":"contracts/Rollup.sol:RollupNC","label":"registry","offset":0,"slot":"1","type":"t_contract(ITokenRegistry)370"},{"astId":92,"contract":"contracts/Rollup.sol:RollupNC","label":"balDepth","offset":0,"slot":"2","type":"t_uint256"},{"astId":94,"contract":"contracts/Rollup.sol:RollupNC","label":"txDepth","offset":0,"slot":"3","type":"t_uint256"},{"astId":96,"contract":"contracts/Rollup.sol:RollupNC","label":"ZERO","offset":0,"slot":"4","type":"t_uint256"},{"astId":99,"contract":"contracts/Rollup.sol:RollupNC","label":"zeroCache","offset":0,"slot":"5","type":"t_array(t_uint256)dyn_storage"},{"astId":101,"contract":"contracts/Rollup.sol:RollupNC","label":"currentRoot","offset":0,"slot":"6","type":"t_uint256"},{"astId":103,"contract":"contracts/Rollup.sol:RollupNC","label":"coordinator","offset":0,"slot":"7","type":"t_address"},{"astId":105,"contract":"contracts/Rollup.sol:RollupNC","label":"depositQueueStart","offset":0,"slot":"8","type":"t_uint256"},{"astId":107,"contract":"contracts/Rollup.sol:RollupNC","label":"depositQueueEnd","offset":0,"slot":"9","type":"t_uint256"},{"astId":109,"contract":"contracts/Rollup.sol:RollupNC","label":"depositQueueSize","offset":0,"slot":"10","type":"t_uint8"},{"astId":111,"contract":"contracts/Rollup.sol:RollupNC","label":"depositSubtreeHeight","offset":1,"slot":"10","type":"t_uint8"},{"astId":113,"contract":"contracts/Rollup.sol:RollupNC","label":"updateNumber","offset":0,"slot":"11","type":"t_uint256"},{"astId":117,"contract":"contracts/Rollup.sol:RollupNC","label":"deposits","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_uint256)"},{"astId":121,"contract":"contracts/Rollup.sol:RollupNC","label":"updates","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_uint256)"},{"astId":125,"contract":"contracts/Rollup.sol:RollupNC","label":"withdraws","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(ITokenRegistry)370":{"encoding":"inplace","label":"contract ITokenRegistry","numberOfBytes":"20"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TokenRegistry.sol":{"TokenRegistry":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_rollup","type":"address"}],"name":"RollupSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"}],"name":"TokenPending","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_index","type":"uint256"}],"name":"TokenRegistered","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"approveToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"coordinator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"registerToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registryIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rollup","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rollup","type":"address"}],"name":"setRollup","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"state","outputs":[{"internalType":"enum TokenRegistration","name":"","type":"uint8"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"approveToken(address)":{"details":"modifier onlyRollup","params":{"_token":"- the contract address of the ERC20 to approve registry proposal for"}},"registerToken(address)":{"params":{"_token":"- the contract address of the ERC20 proposed for registry"}},"setRollup(address)":{"details":"modifier onlyCoordinator","params":{"_rollup":"- the contract address to designate as the rollup within the registry contract"}}},"title":"Registry of ERC20 tokens that the Rollup can process","version":1},"evm":{"bytecode":{"functionDebugData":{"@_210":{"entryPoint":null,"id":210,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b0319163317905560016004556104fa806100376000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063763131a01161005b578063763131a01461012b57806380b2edd81461013e578063cb23bcb514610151578063d1f807d81461016457600080fd5b806309824a801461008d5780630a009097146100a257806331e658a5146100d25780635893253c14610102575b600080fd5b6100a061009b366004610400565b61017b565b005b6000546100b5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f56100e0366004610400565b60026020526000908152604090205460ff1681565b6040516100c99190610446565b6100b561011036600461046e565b6003602052600090815260409020546001600160a01b031681565b6100a0610139366004610400565b610261565b6100a061014c366004610400565b6102c9565b6001546100b5906001600160a01b031681565b61016d60045481565b6040519081526020016100c9565b6001600160a01b038116600090815260026020819052604082205460ff16908111156101a9576101a9610430565b146102065760405162461bcd60e51b815260206004820152602260248201527f546f6b656e20616c72656164792070656e64696e672f20726567697374657265604482015261642160f01b60648201526084015b60405180910390fd5b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f750347718cf11f205b67495b45c5173447387523f3175c795ee6e1a2bbcdc35091015b60405180910390a150565b6000546001600160a01b0316331461027b5761027b610487565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f7e8ce0bde07da6b99aedf3acf71a4ab99699f774d164be03d69bfe6d5a6f527290602001610256565b6001546001600160a01b031633146102e3576102e3610487565b60016001600160a01b03821660009081526002602081905260409091205460ff169081111561031457610314610430565b1461036c5760405162461bcd60e51b815260206004820152602260248201527f546f6b656e206973206e6f742070656e64696e6720726567697374726174696f6044820152616e2160f01b60648201526084016101fd565b60016004600082825461037f919061049d565b9091555050600454600090815260036020908152604080832080546001600160a01b0319166001600160a01b0386169081179091558352600291829052909120805460ff191660018302179055507fd7aa35c4dfada1a1408fbca910f9d1a5fb7827f7f5e2ee3bafb5907d22c7c85e60045460405161025691815260200190565b60006020828403121561041257600080fd5b81356001600160a01b038116811461042957600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061046857634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561048057600080fd5b5035919050565b634e487b7160e01b600052600160045260246000fd5b808201808211156104be57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122083139fa731fc396913131a4cd352d7545ab0297cd9d05ab5c0e4d5aa3ca16b3764736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x4 SSTORE PUSH2 0x4FA DUP1 PUSH2 0x37 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x763131A0 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x763131A0 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x80B2EDD8 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xCB23BCB5 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xD1F807D8 EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9824A80 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xA009097 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x31E658A5 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5893253C EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1A9 JUMPI PUSH2 0x1A9 PUSH2 0x430 JUMP JUMPDEST EQ PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C72656164792070656E64696E672F20726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6421 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x750347718CF11F205B67495B45C5173447387523F3175C795EE6E1A2BBCDC350 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI PUSH2 0x27B PUSH2 0x487 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7E8CE0BDE07DA6B99AEDF3ACF71A4AB99699F774D164BE03D69BFE6D5A6F5272 SWAP1 PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E3 JUMPI PUSH2 0x2E3 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x314 JUMPI PUSH2 0x314 PUSH2 0x430 JUMP JUMPDEST EQ PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F742070656E64696E6720726567697374726174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6E21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x2 SWAP2 DUP3 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 MUL OR SWAP1 SSTORE POP PUSH32 0xD7AA35C4DFADA1A1408FBCA910F9D1A5FB7827F7F5E2EE3BAFB5907D22C7C85E PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x468 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 SGT SWAP16 0xA7 BALANCE 0xFC CODECOPY PUSH10 0x13131A4CD352D7545AB0 0x29 PUSH29 0xD9D05AB5C0E4D5AA3CA16B3764736F6C63430008130033000000000000 ","sourceMap":"217:1013:2:-:0;;;335:89;;;;;;;;;-1:-1:-1;359:11:2;:24;;-1:-1:-1;;;;;;359:24:2;373:10;359:24;;;;393:13;:17;217:1013;;;;;;"},"deployedBytecode":{"functionDebugData":{"@approveToken_295":{"entryPoint":713,"id":295,"parameterSlots":1,"returnSlots":0},"@coordinator_338":{"entryPoint":null,"id":338,"parameterSlots":0,"returnSlots":0},"@registerToken_255":{"entryPoint":379,"id":255,"parameterSlots":1,"returnSlots":0},"@registryIndex_351":{"entryPoint":null,"id":351,"parameterSlots":0,"returnSlots":0},"@registry_349":{"entryPoint":null,"id":349,"parameterSlots":0,"returnSlots":0},"@rollup_340":{"entryPoint":null,"id":340,"parameterSlots":0,"returnSlots":0},"@setRollup_227":{"entryPoint":609,"id":227,"parameterSlots":1,"returnSlots":0},"@state_345":{"entryPoint":null,"id":345,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":1024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1134,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_TokenRegistration_$374__to_t_uint8__fromStack_reversed":{"entryPoint":1094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3edb2dc9473b510b4ad11027d46550ac643ed307043f0a0eca3447277fde343c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c2fa44ad3e83165a2fafe75f6eec9a7234ed076da2395b59ddca80910952221d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1181,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x01":{"entryPoint":1159,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":1072,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2528:5","statements":[{"nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:216:5","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:5"},"nodeType":"YulFunctionCall","src":"132:12:5"},"nodeType":"YulExpressionStatement","src":"132:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:5"},"nodeType":"YulFunctionCall","src":"101:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:5"},"nodeType":"YulFunctionCall","src":"97:32:5"},"nodeType":"YulIf","src":"94:52:5"},{"nodeType":"YulVariableDeclaration","src":"155:36:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"181:9:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"168:12:5"},"nodeType":"YulFunctionCall","src":"168:23:5"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"159:5:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:5"},"nodeType":"YulFunctionCall","src":"256:12:5"},"nodeType":"YulExpressionStatement","src":"256:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"213:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"224:5:5"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"239:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"244:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"235:3:5"},"nodeType":"YulFunctionCall","src":"235:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"231:3:5"},"nodeType":"YulFunctionCall","src":"231:19:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"220:3:5"},"nodeType":"YulFunctionCall","src":"220:31:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"210:2:5"},"nodeType":"YulFunctionCall","src":"210:42:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"203:6:5"},"nodeType":"YulFunctionCall","src":"203:50:5"},"nodeType":"YulIf","src":"200:70:5"},{"nodeType":"YulAssignment","src":"279:15:5","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:5"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:5","type":""}],"src":"14:286:5"},{"body":{"nodeType":"YulBlock","src":"406:102:5","statements":[{"nodeType":"YulAssignment","src":"416:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"428:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"439:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"424:3:5"},"nodeType":"YulFunctionCall","src":"424:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"416:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:5"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"473:6:5"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"489:3:5","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"494:1:5","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"485:3:5"},"nodeType":"YulFunctionCall","src":"485:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"481:3:5"},"nodeType":"YulFunctionCall","src":"481:19:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"469:3:5"},"nodeType":"YulFunctionCall","src":"469:32:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"451:6:5"},"nodeType":"YulFunctionCall","src":"451:51:5"},"nodeType":"YulExpressionStatement","src":"451:51:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"375:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"386:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"397:4:5","type":""}],"src":"305:203:5"},{"body":{"nodeType":"YulBlock","src":"545:95:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"562:1:5","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"569:3:5","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"574:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"565:3:5"},"nodeType":"YulFunctionCall","src":"565:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"555:6:5"},"nodeType":"YulFunctionCall","src":"555:31:5"},"nodeType":"YulExpressionStatement","src":"555:31:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"602:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"605:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"595:6:5"},"nodeType":"YulFunctionCall","src":"595:15:5"},"nodeType":"YulExpressionStatement","src":"595:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"626:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"629:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"619:6:5"},"nodeType":"YulFunctionCall","src":"619:15:5"},"nodeType":"YulExpressionStatement","src":"619:15:5"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"513:127:5"},{"body":{"nodeType":"YulBlock","src":"765:229:5","statements":[{"nodeType":"YulAssignment","src":"775:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"787:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"783:3:5"},"nodeType":"YulFunctionCall","src":"783:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"775:4:5"}]},{"body":{"nodeType":"YulBlock","src":"843:111:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"864:1:5","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"871:3:5","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"876:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"867:3:5"},"nodeType":"YulFunctionCall","src":"867:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"857:6:5"},"nodeType":"YulFunctionCall","src":"857:31:5"},"nodeType":"YulExpressionStatement","src":"857:31:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"908:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"911:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"901:6:5"},"nodeType":"YulFunctionCall","src":"901:15:5"},"nodeType":"YulExpressionStatement","src":"901:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:5"},"nodeType":"YulFunctionCall","src":"929:15:5"},"nodeType":"YulExpressionStatement","src":"929:15:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"823:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"831:1:5","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"820:2:5"},"nodeType":"YulFunctionCall","src":"820:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"813:6:5"},"nodeType":"YulFunctionCall","src":"813:21:5"},"nodeType":"YulIf","src":"810:144:5"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"970:9:5"},{"name":"value0","nodeType":"YulIdentifier","src":"981:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"963:6:5"},"nodeType":"YulFunctionCall","src":"963:25:5"},"nodeType":"YulExpressionStatement","src":"963:25:5"}]},"name":"abi_encode_tuple_t_enum$_TokenRegistration_$374__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"734:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"745:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"756:4:5","type":""}],"src":"645:349:5"},{"body":{"nodeType":"YulBlock","src":"1069:110:5","statements":[{"body":{"nodeType":"YulBlock","src":"1115:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1124:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1127:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1117:6:5"},"nodeType":"YulFunctionCall","src":"1117:12:5"},"nodeType":"YulExpressionStatement","src":"1117:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1090:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"1099:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1086:3:5"},"nodeType":"YulFunctionCall","src":"1086:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"1111:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1082:3:5"},"nodeType":"YulFunctionCall","src":"1082:32:5"},"nodeType":"YulIf","src":"1079:52:5"},{"nodeType":"YulAssignment","src":"1140:33:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1150:12:5"},"nodeType":"YulFunctionCall","src":"1150:23:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1140:6:5"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1035:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1046:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1058:6:5","type":""}],"src":"999:180:5"},{"body":{"nodeType":"YulBlock","src":"1285:76:5","statements":[{"nodeType":"YulAssignment","src":"1295:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1318:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:5"},"nodeType":"YulFunctionCall","src":"1303:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1295:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1337:9:5"},{"name":"value0","nodeType":"YulIdentifier","src":"1348:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1330:6:5"},"nodeType":"YulFunctionCall","src":"1330:25:5"},"nodeType":"YulExpressionStatement","src":"1330:25:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1254:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1265:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1276:4:5","type":""}],"src":"1184:177:5"},{"body":{"nodeType":"YulBlock","src":"1540:224:5","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1557:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1568:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1550:6:5"},"nodeType":"YulFunctionCall","src":"1550:21:5"},"nodeType":"YulExpressionStatement","src":"1550:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1602:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1587:3:5"},"nodeType":"YulFunctionCall","src":"1587:18:5"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:5","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1580:6:5"},"nodeType":"YulFunctionCall","src":"1580:30:5"},"nodeType":"YulExpressionStatement","src":"1580:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1630:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1641:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1626:3:5"},"nodeType":"YulFunctionCall","src":"1626:18:5"},{"hexValue":"546f6b656e20616c72656164792070656e64696e672f20726567697374657265","kind":"string","nodeType":"YulLiteral","src":"1646:34:5","type":"","value":"Token already pending/ registere"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1619:6:5"},"nodeType":"YulFunctionCall","src":"1619:62:5"},"nodeType":"YulExpressionStatement","src":"1619:62:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1701:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1712:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1697:3:5"},"nodeType":"YulFunctionCall","src":"1697:18:5"},{"hexValue":"6421","kind":"string","nodeType":"YulLiteral","src":"1717:4:5","type":"","value":"d!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1690:6:5"},"nodeType":"YulFunctionCall","src":"1690:32:5"},"nodeType":"YulExpressionStatement","src":"1690:32:5"},{"nodeType":"YulAssignment","src":"1731:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1743:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1754:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:5"},"nodeType":"YulFunctionCall","src":"1739:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1731:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_3edb2dc9473b510b4ad11027d46550ac643ed307043f0a0eca3447277fde343c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1517:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1531:4:5","type":""}],"src":"1366:398:5"},{"body":{"nodeType":"YulBlock","src":"1801:95:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1818:1:5","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1825:3:5","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1830:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1821:3:5"},"nodeType":"YulFunctionCall","src":"1821:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1811:6:5"},"nodeType":"YulFunctionCall","src":"1811:31:5"},"nodeType":"YulExpressionStatement","src":"1811:31:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1858:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1861:4:5","type":"","value":"0x01"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1851:6:5"},"nodeType":"YulFunctionCall","src":"1851:15:5"},"nodeType":"YulExpressionStatement","src":"1851:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1882:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1885:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1875:6:5"},"nodeType":"YulFunctionCall","src":"1875:15:5"},"nodeType":"YulExpressionStatement","src":"1875:15:5"}]},"name":"panic_error_0x01","nodeType":"YulFunctionDefinition","src":"1769:127:5"},{"body":{"nodeType":"YulBlock","src":"2075:224:5","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2092:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2103:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2085:6:5"},"nodeType":"YulFunctionCall","src":"2085:21:5"},"nodeType":"YulExpressionStatement","src":"2085:21:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2126:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2137:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:5"},"nodeType":"YulFunctionCall","src":"2122:18:5"},{"kind":"number","nodeType":"YulLiteral","src":"2142:2:5","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2115:6:5"},"nodeType":"YulFunctionCall","src":"2115:30:5"},"nodeType":"YulExpressionStatement","src":"2115:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2165:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2176:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2161:3:5"},"nodeType":"YulFunctionCall","src":"2161:18:5"},{"hexValue":"546f6b656e206973206e6f742070656e64696e6720726567697374726174696f","kind":"string","nodeType":"YulLiteral","src":"2181:34:5","type":"","value":"Token is not pending registratio"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2154:6:5"},"nodeType":"YulFunctionCall","src":"2154:62:5"},"nodeType":"YulExpressionStatement","src":"2154:62:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2236:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2247:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2232:3:5"},"nodeType":"YulFunctionCall","src":"2232:18:5"},{"hexValue":"6e21","kind":"string","nodeType":"YulLiteral","src":"2252:4:5","type":"","value":"n!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2225:6:5"},"nodeType":"YulFunctionCall","src":"2225:32:5"},"nodeType":"YulExpressionStatement","src":"2225:32:5"},{"nodeType":"YulAssignment","src":"2266:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2289:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:5"},"nodeType":"YulFunctionCall","src":"2274:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2266:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_c2fa44ad3e83165a2fafe75f6eec9a7234ed076da2395b59ddca80910952221d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2052:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2066:4:5","type":""}],"src":"1901:398:5"},{"body":{"nodeType":"YulBlock","src":"2352:174:5","statements":[{"nodeType":"YulAssignment","src":"2362:16:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2373:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"2376:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2369:3:5"},"nodeType":"YulFunctionCall","src":"2369:9:5"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2362:3:5"}]},{"body":{"nodeType":"YulBlock","src":"2409:111:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2430:1:5","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2437:3:5","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2442:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2433:3:5"},"nodeType":"YulFunctionCall","src":"2433:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2423:6:5"},"nodeType":"YulFunctionCall","src":"2423:31:5"},"nodeType":"YulExpressionStatement","src":"2423:31:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2474:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2477:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2467:6:5"},"nodeType":"YulFunctionCall","src":"2467:15:5"},"nodeType":"YulExpressionStatement","src":"2467:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2502:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2505:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2495:6:5"},"nodeType":"YulFunctionCall","src":"2495:15:5"},"nodeType":"YulExpressionStatement","src":"2495:15:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2393:1:5"},{"name":"sum","nodeType":"YulIdentifier","src":"2396:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2390:2:5"},"nodeType":"YulFunctionCall","src":"2390:10:5"},"nodeType":"YulIf","src":"2387:133:5"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2335:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"2338:1:5","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2344:3:5","type":""}],"src":"2304:222:5"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_TokenRegistration_$374__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_3edb2dc9473b510b4ad11027d46550ac643ed307043f0a0eca3447277fde343c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Token already pending/ registere\")\n        mstore(add(headStart, 96), \"d!\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_c2fa44ad3e83165a2fafe75f6eec9a7234ed076da2395b59ddca80910952221d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Token is not pending registratio\")\n        mstore(add(headStart, 96), \"n!\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c8063763131a01161005b578063763131a01461012b57806380b2edd81461013e578063cb23bcb514610151578063d1f807d81461016457600080fd5b806309824a801461008d5780630a009097146100a257806331e658a5146100d25780635893253c14610102575b600080fd5b6100a061009b366004610400565b61017b565b005b6000546100b5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f56100e0366004610400565b60026020526000908152604090205460ff1681565b6040516100c99190610446565b6100b561011036600461046e565b6003602052600090815260409020546001600160a01b031681565b6100a0610139366004610400565b610261565b6100a061014c366004610400565b6102c9565b6001546100b5906001600160a01b031681565b61016d60045481565b6040519081526020016100c9565b6001600160a01b038116600090815260026020819052604082205460ff16908111156101a9576101a9610430565b146102065760405162461bcd60e51b815260206004820152602260248201527f546f6b656e20616c72656164792070656e64696e672f20726567697374657265604482015261642160f01b60648201526084015b60405180910390fd5b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f750347718cf11f205b67495b45c5173447387523f3175c795ee6e1a2bbcdc35091015b60405180910390a150565b6000546001600160a01b0316331461027b5761027b610487565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f7e8ce0bde07da6b99aedf3acf71a4ab99699f774d164be03d69bfe6d5a6f527290602001610256565b6001546001600160a01b031633146102e3576102e3610487565b60016001600160a01b03821660009081526002602081905260409091205460ff169081111561031457610314610430565b1461036c5760405162461bcd60e51b815260206004820152602260248201527f546f6b656e206973206e6f742070656e64696e6720726567697374726174696f6044820152616e2160f01b60648201526084016101fd565b60016004600082825461037f919061049d565b9091555050600454600090815260036020908152604080832080546001600160a01b0319166001600160a01b0386169081179091558352600291829052909120805460ff191660018302179055507fd7aa35c4dfada1a1408fbca910f9d1a5fb7827f7f5e2ee3bafb5907d22c7c85e60045460405161025691815260200190565b60006020828403121561041257600080fd5b81356001600160a01b038116811461042957600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061046857634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561048057600080fd5b5035919050565b634e487b7160e01b600052600160045260246000fd5b808201808211156104be57634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122083139fa731fc396913131a4cd352d7545ab0297cd9d05ab5c0e4d5aa3ca16b3764736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x763131A0 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x763131A0 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x80B2EDD8 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xCB23BCB5 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xD1F807D8 EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9824A80 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xA009097 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x31E658A5 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5893253C EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH2 0xB5 PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x400 JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xB5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1A9 JUMPI PUSH2 0x1A9 PUSH2 0x430 JUMP JUMPDEST EQ PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C72656164792070656E64696E672F20726567697374657265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6421 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x750347718CF11F205B67495B45C5173447387523F3175C795EE6E1A2BBCDC350 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI PUSH2 0x27B PUSH2 0x487 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7E8CE0BDE07DA6B99AEDF3ACF71A4AB99699F774D164BE03D69BFE6D5A6F5272 SWAP1 PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E3 JUMPI PUSH2 0x2E3 PUSH2 0x487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x314 JUMPI PUSH2 0x314 PUSH2 0x430 JUMP JUMPDEST EQ PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206973206E6F742070656E64696E6720726567697374726174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6E21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x2 SWAP2 DUP3 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 MUL OR SWAP1 SSTORE POP PUSH32 0xD7AA35C4DFADA1A1408FBCA910F9D1A5FB7827F7F5E2EE3BAFB5907D22C7C85E PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x468 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 SGT SWAP16 0xA7 BALANCE 0xFC CODECOPY PUSH10 0x13131A4CD352D7545AB0 0x29 PUSH29 0xD9D05AB5C0E4D5AA3CA16B3764736F6C63430008130033000000000000 ","sourceMap":"217:1013:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;570:278;;;;;;:::i;:::-;;:::i;:::-;;823:26:3;;;;;-1:-1:-1;;;;;823:26:3;;;;;;-1:-1:-1;;;;;469:32:5;;;451:51;;439:2;424:18;823:26:3;;;;;;;;947:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;1056:43::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1056:43:3;;;430:134:2;;;;;;:::i;:::-;;:::i;854:374::-;;;;;;:::i;:::-;;:::i;889:21:3:-;;;;;-1:-1:-1;;;;;889:21:3;;;1155:28;;;;;;;;;1330:25:5;;;1318:2;1303:18;1155:28:3;1184:177:5;570:278:2;-1:-1:-1;;;;;656:13:2;;673:22;656:13;;;:5;:13;;;;;;;;;;;:39;;;;;;;:::i;:::-;;635:120;;;;-1:-1:-1;;;635:120:2;;1568:2:5;635:120:2;;;1550:21:5;1607:2;1587:18;;;1580:30;1646:34;1626:18;;;1619:62;-1:-1:-1;;;1697:18:5;;;1690:32;1739:19;;635:120:2;;;;;;;;;-1:-1:-1;;;;;765:13:2;;;;;;:5;:13;;;;;;;;;:41;;-1:-1:-1;;765:41:2;781:25;765:41;;;821:20;;451:51:5;;;821:20:2;;424:18:5;821:20:2;;;;;;;;570:278;:::o;430:134::-;765:11:3;;-1:-1:-1;;;;;765:11:3;751:10;:25;744:33;;;;:::i;:::-;508:6:2::1;:16:::0;;-1:-1:-1;;;;;;508:16:2::1;-1:-1:-1::0;;;;;508:16:2;::::1;::::0;;::::1;::::0;;;539:18:::1;::::0;451:51:5;;;539:18:2::1;::::0;439:2:5;424:18;539::2::1;305:203:5::0;854:374:2;599:6:3;;-1:-1:-1;;;;;599:6:3;585:10;:20;578:28;;;;:::i;:::-;967:25:2::1;-1:-1:-1::0;;;;;950:13:2;::::1;;::::0;;;:5:::1;:13;::::0;;;;;;;;::::1;;::::0;:42;::::1;;;;;;:::i;:::-;;929:123;;;::::0;-1:-1:-1;;;929:123:2;;2103:2:5;929:123:2::1;::::0;::::1;2085:21:5::0;2142:2;2122:18;;;2115:30;2181:34;2161:18;;;2154:62;-1:-1:-1;;;2232:18:5;;;2225:32;2274:19;;929:123:2::1;1901:398:5::0;929:123:2::1;1079:1;1062:13;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1099:13:2::1;::::0;1090:23:::1;::::0;;;:8:::1;:23;::::0;;;;;;;:32;;-1:-1:-1;;;;;;1090:32:2::1;-1:-1:-1::0;;;;;1090:32:2;::::1;::::0;;::::1;::::0;;;1132:13;;1148:28:::1;1132:13:::0;;;;;;;:44;;-1:-1:-1;;1132:44:2::1;-1:-1:-1::0;1148:28:2;1132:44:::1;;;;;1191:30;1207:13;;1191:30;;;;1330:25:5::0;;1318:2;1303:18;;1184:177;14:286;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:5;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:5:o;513:127::-;574:10;569:3;565:20;562:1;555:31;605:4;602:1;595:15;629:4;626:1;619:15;645:349;798:2;783:18;;831:1;820:13;;810:144;;876:10;871:3;867:20;864:1;857:31;911:4;908:1;901:15;939:4;936:1;929:15;810:144;963:25;;;645:349;:::o;999:180::-;1058:6;1111:2;1099:9;1090:7;1086:23;1082:32;1079:52;;;1127:1;1124;1117:12;1079:52;-1:-1:-1;1150:23:5;;999:180;-1:-1:-1;999:180:5:o;1769:127::-;1830:10;1825:3;1821:20;1818:1;1811:31;1861:4;1858:1;1851:15;1885:4;1882:1;1875:15;2304:222;2369:9;;;2390:10;;;2387:133;;;2442:10;2437:3;2433:20;2430:1;2423:31;2477:4;2474:1;2467:15;2505:4;2502:1;2495:15;2387:133;2304:222;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"254800","executionCost":"46635","totalCost":"301435"},"external":{"approveToken(address)":"82895","coordinator()":"2349","registerToken(address)":"27893","registry(uint256)":"2533","registryIndex()":"2361","rollup()":"2370","setRollup(address)":"27741","state(address)":"2582"}},"methodIdentifiers":{"approveToken(address)":"80b2edd8","coordinator()":"0a009097","registerToken(address)":"09824a80","registry(uint256)":"5893253c","registryIndex()":"d1f807d8","rollup()":"cb23bcb5","setRollup(address)":"763131a0","state(address)":"31e658a5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rollup\",\"type\":\"address\"}],\"name\":\"RollupSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TokenRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"approveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rollup\",\"type\":\"address\"}],\"name\":\"setRollup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum TokenRegistration\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approveToken(address)\":{\"details\":\"modifier onlyRollup\",\"params\":{\"_token\":\"- the contract address of the ERC20 to approve registry proposal for\"}},\"registerToken(address)\":{\"params\":{\"_token\":\"- the contract address of the ERC20 proposed for registry\"}},\"setRollup(address)\":{\"details\":\"modifier onlyCoordinator\",\"params\":{\"_rollup\":\"- the contract address to designate as the rollup within the registry contract\"}}},\"title\":\"Registry of ERC20 tokens that the Rollup can process\",\"version\":1},\"userdoc\":{\"events\":{\"RollupSet(address)\":{\"notice\":\"EVENTS ///\"}},\"kind\":\"user\",\"methods\":{\"approveToken(address)\":{\"notice\":\"Centralized approval of ERC20 token registry requests\"},\"constructor\":{\"notice\":\"Instantiate the RollupNC's ERC20 Token Registry\"},\"coordinator()\":{\"notice\":\"VARIABLES ///\"},\"registerToken(address)\":{\"notice\":\"Propose a new token be added to the roll-up's exchange network\"},\"setRollup(address)\":{\"notice\":\"Set the address of the contract managing rollup state in a merkle tree\"}},\"notice\":\"documented in ITokenRegistry\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenRegistry.sol\":\"TokenRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenRegistry.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\nimport \\\"./interfaces/ITokenRegistry.sol\\\";\\n\\n/**\\n * @title Registry of ERC20 tokens that the Rollup can process\\n * @notice documented in ITokenRegistry\\n */\\ncontract TokenRegistry is ITokenRegistry {\\n    /**\\n     * Instantiate the RollupNC's ERC20 Token Registry\\n     */\\n    constructor() {\\n        coordinator = msg.sender;\\n        registryIndex = 1; // ETH\\n    }\\n\\n    function setRollup(address _rollup) public override onlyCoordinator {\\n        rollup = _rollup;\\n        emit RollupSet(_rollup);\\n    }\\n\\n    function registerToken(address _token) public override {\\n        require(\\n            state[_token] == TokenRegistration.None,\\n            \\\"Token already pending/ registered!\\\"\\n        );\\n        state[_token] = TokenRegistration.Pending;\\n        emit TokenPending(_token);\\n    }\\n\\n    function approveToken(address _token) public override onlyRollup {\\n        require(\\n            state[_token] == TokenRegistration.Pending,\\n            \\\"Token is not pending registration!\\\"\\n        );\\n        registryIndex += 1;\\n        registry[registryIndex] = _token;\\n        state[_token] = TokenRegistration.Registered;\\n        emit TokenRegistered(registryIndex);\\n    }\\n}\",\"keccak256\":\"0x6bc39c322a12437df6b2cbe913b492b1bcf2a0b1bfbbe63285e03c664792c5bf\",\"license\":\"GNU GPLv3\"},\"contracts/interfaces/ITokenRegistry.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\n/**\\n * @title Interface for a registry of ERC20 assets that can be locked into and traded withinn the rollup\\n * @dev registeredToken[0] is always the current EVM's native gas token (ether on ethereum)\\n */\\nabstract contract ITokenRegistry {\\n    /// EVENTS ///\\n    event RollupSet(address _rollup);\\n    event TokenPending(address _token);\\n    event TokenRegistered(uint256 _index);\\n\\n    /// MODIFIERS ///\\n    /* Ensure a function can only be called by the rollup smart contract */\\n    modifier onlyRollup() {\\n        assert(msg.sender == rollup);\\n        _;\\n    }\\n\\n    /* Ensure a function can only be called by the permissioned sequencer */\\n    modifier onlyCoordinator() {\\n        assert(msg.sender == coordinator);\\n        _;\\n    }\\n\\n    /// VARIABLES ///\\n    address public coordinator; // permissioned sequencer address\\n    address public rollup; // merkle state CRUD contract\\n\\n    mapping(address => TokenRegistration) public state; // map erc20 tokens to their state within the rollup\\n    mapping(uint256 => address) public registry; // index of registered ERC20 tokens on the rollup\\n    uint256 public registryIndex; // boundary of registery (alternatively: numTokens)\\n\\n    /// FUNCTIONS ///\\n    /**\\n     * Set the address of the contract managing rollup state in a merkle tree\\n     * @dev modifier onlyCoordinator\\n     *\\n     * @param _rollup - the contract address to designate as the rollup within the registry contract\\n     */\\n    function setRollup(address _rollup) public virtual;\\n\\n    /**\\n     * Propose a new token be added to the roll-up's exchange network\\n     *\\n     * @param _token - the contract address of the ERC20 proposed for registry\\n     */\\n    function registerToken(address _token) public virtual;\\n\\n    /**\\n     * Centralized approval of ERC20 token registry requests\\n     * @dev modifier onlyRollup\\n     *\\n     * @param _token - the contract address of the ERC20 to approve registry proposal for\\n     */\\n    function approveToken(address _token) public virtual;\\n}\\n\\nenum TokenRegistration { None, Pending, Registered }\",\"keccak256\":\"0x194df75a11fc262d1e95692e0cffbd97c1825884ae1ca0b71913f19f9ff0fe85\",\"license\":\"GNU GPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":338,"contract":"contracts/TokenRegistry.sol:TokenRegistry","label":"coordinator","offset":0,"slot":"0","type":"t_address"},{"astId":340,"contract":"contracts/TokenRegistry.sol:TokenRegistry","label":"rollup","offset":0,"slot":"1","type":"t_address"},{"astId":345,"contract":"contracts/TokenRegistry.sol:TokenRegistry","label":"state","offset":0,"slot":"2","type":"t_mapping(t_address,t_enum(TokenRegistration)374)"},{"astId":349,"contract":"contracts/TokenRegistry.sol:TokenRegistry","label":"registry","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_address)"},{"astId":351,"contract":"contracts/TokenRegistry.sol:TokenRegistry","label":"registryIndex","offset":0,"slot":"4","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_enum(TokenRegistration)374":{"encoding":"inplace","label":"enum TokenRegistration","numberOfBytes":"1"},"t_mapping(t_address,t_enum(TokenRegistration)374)":{"encoding":"mapping","key":"t_address","label":"mapping(address => enum TokenRegistration)","numberOfBytes":"32","value":"t_enum(TokenRegistration)374"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"RollupSet(address)":{"notice":"EVENTS ///"}},"kind":"user","methods":{"approveToken(address)":{"notice":"Centralized approval of ERC20 token registry requests"},"constructor":{"notice":"Instantiate the RollupNC's ERC20 Token Registry"},"coordinator()":{"notice":"VARIABLES ///"},"registerToken(address)":{"notice":"Propose a new token be added to the roll-up's exchange network"},"setRollup(address)":{"notice":"Set the address of the contract managing rollup state in a merkle tree"}},"notice":"documented in ITokenRegistry","version":1}}},"contracts/interfaces/ITokenRegistry.sol":{"ITokenRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_rollup","type":"address"}],"name":"RollupSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_token","type":"address"}],"name":"TokenPending","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_index","type":"uint256"}],"name":"TokenRegistered","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"approveToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"coordinator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"registerToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registryIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rollup","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rollup","type":"address"}],"name":"setRollup","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"state","outputs":[{"internalType":"enum TokenRegistration","name":"","type":"uint8"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"registeredToken[0] is always the current EVM's native gas token (ether on ethereum)","kind":"dev","methods":{"approveToken(address)":{"details":"modifier onlyRollup","params":{"_token":"- the contract address of the ERC20 to approve registry proposal for"}},"registerToken(address)":{"params":{"_token":"- the contract address of the ERC20 proposed for registry"}},"setRollup(address)":{"details":"modifier onlyCoordinator","params":{"_rollup":"- the contract address to designate as the rollup within the registry contract"}}},"title":"Interface for a registry of ERC20 assets that can be locked into and traded withinn the rollup","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approveToken(address)":"80b2edd8","coordinator()":"0a009097","registerToken(address)":"09824a80","registry(uint256)":"5893253c","registryIndex()":"d1f807d8","rollup()":"cb23bcb5","setRollup(address)":"763131a0","state(address)":"31e658a5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_rollup\",\"type\":\"address\"}],\"name\":\"RollupSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TokenRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"approveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rollup\",\"type\":\"address\"}],\"name\":\"setRollup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum TokenRegistration\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"registeredToken[0] is always the current EVM's native gas token (ether on ethereum)\",\"kind\":\"dev\",\"methods\":{\"approveToken(address)\":{\"details\":\"modifier onlyRollup\",\"params\":{\"_token\":\"- the contract address of the ERC20 to approve registry proposal for\"}},\"registerToken(address)\":{\"params\":{\"_token\":\"- the contract address of the ERC20 proposed for registry\"}},\"setRollup(address)\":{\"details\":\"modifier onlyCoordinator\",\"params\":{\"_rollup\":\"- the contract address to designate as the rollup within the registry contract\"}}},\"title\":\"Interface for a registry of ERC20 assets that can be locked into and traded withinn the rollup\",\"version\":1},\"userdoc\":{\"events\":{\"RollupSet(address)\":{\"notice\":\"EVENTS ///\"}},\"kind\":\"user\",\"methods\":{\"approveToken(address)\":{\"notice\":\"Centralized approval of ERC20 token registry requests\"},\"coordinator()\":{\"notice\":\"VARIABLES ///\"},\"registerToken(address)\":{\"notice\":\"Propose a new token be added to the roll-up's exchange network\"},\"setRollup(address)\":{\"notice\":\"Set the address of the contract managing rollup state in a merkle tree\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ITokenRegistry.sol\":\"ITokenRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ITokenRegistry.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\n/**\\n * @title Interface for a registry of ERC20 assets that can be locked into and traded withinn the rollup\\n * @dev registeredToken[0] is always the current EVM's native gas token (ether on ethereum)\\n */\\nabstract contract ITokenRegistry {\\n    /// EVENTS ///\\n    event RollupSet(address _rollup);\\n    event TokenPending(address _token);\\n    event TokenRegistered(uint256 _index);\\n\\n    /// MODIFIERS ///\\n    /* Ensure a function can only be called by the rollup smart contract */\\n    modifier onlyRollup() {\\n        assert(msg.sender == rollup);\\n        _;\\n    }\\n\\n    /* Ensure a function can only be called by the permissioned sequencer */\\n    modifier onlyCoordinator() {\\n        assert(msg.sender == coordinator);\\n        _;\\n    }\\n\\n    /// VARIABLES ///\\n    address public coordinator; // permissioned sequencer address\\n    address public rollup; // merkle state CRUD contract\\n\\n    mapping(address => TokenRegistration) public state; // map erc20 tokens to their state within the rollup\\n    mapping(uint256 => address) public registry; // index of registered ERC20 tokens on the rollup\\n    uint256 public registryIndex; // boundary of registery (alternatively: numTokens)\\n\\n    /// FUNCTIONS ///\\n    /**\\n     * Set the address of the contract managing rollup state in a merkle tree\\n     * @dev modifier onlyCoordinator\\n     *\\n     * @param _rollup - the contract address to designate as the rollup within the registry contract\\n     */\\n    function setRollup(address _rollup) public virtual;\\n\\n    /**\\n     * Propose a new token be added to the roll-up's exchange network\\n     *\\n     * @param _token - the contract address of the ERC20 proposed for registry\\n     */\\n    function registerToken(address _token) public virtual;\\n\\n    /**\\n     * Centralized approval of ERC20 token registry requests\\n     * @dev modifier onlyRollup\\n     *\\n     * @param _token - the contract address of the ERC20 to approve registry proposal for\\n     */\\n    function approveToken(address _token) public virtual;\\n}\\n\\nenum TokenRegistration { None, Pending, Registered }\",\"keccak256\":\"0x194df75a11fc262d1e95692e0cffbd97c1825884ae1ca0b71913f19f9ff0fe85\",\"license\":\"GNU GPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":338,"contract":"contracts/interfaces/ITokenRegistry.sol:ITokenRegistry","label":"coordinator","offset":0,"slot":"0","type":"t_address"},{"astId":340,"contract":"contracts/interfaces/ITokenRegistry.sol:ITokenRegistry","label":"rollup","offset":0,"slot":"1","type":"t_address"},{"astId":345,"contract":"contracts/interfaces/ITokenRegistry.sol:ITokenRegistry","label":"state","offset":0,"slot":"2","type":"t_mapping(t_address,t_enum(TokenRegistration)374)"},{"astId":349,"contract":"contracts/interfaces/ITokenRegistry.sol:ITokenRegistry","label":"registry","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_address)"},{"astId":351,"contract":"contracts/interfaces/ITokenRegistry.sol:ITokenRegistry","label":"registryIndex","offset":0,"slot":"4","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_enum(TokenRegistration)374":{"encoding":"inplace","label":"enum TokenRegistration","numberOfBytes":"1"},"t_mapping(t_address,t_enum(TokenRegistration)374)":{"encoding":"mapping","key":"t_address","label":"mapping(address => enum TokenRegistration)","numberOfBytes":"32","value":"t_enum(TokenRegistration)374"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"events":{"RollupSet(address)":{"notice":"EVENTS ///"}},"kind":"user","methods":{"approveToken(address)":{"notice":"Centralized approval of ERC20 token registry requests"},"coordinator()":{"notice":"VARIABLES ///"},"registerToken(address)":{"notice":"Propose a new token be added to the roll-up's exchange network"},"setRollup(address)":{"notice":"Set the address of the contract managing rollup state in a merkle tree"}},"version":1}}},"contracts/libraries/Poseidon.sol":{"PoseidonT3":{"abi":[{"inputs":[{"internalType":"uint256[2]","name":"","type":"uint256[2]"}],"name":"poseidon","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61011961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806329a5f2f6146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060408284031215606c57600080fd5b82601f830112607a57600080fd5b6040516040810181811067ffffffffffffffff8211171560aa57634e487b7160e01b600052604160045260246000fd5b806040525080604084018581111560c057600080fd5b845b8181101560d857803583526020928301920160c2565b50919594505050505056fea26469706673582212207b001192ec7ae593fe6ec916f0a48222ab00530b94ce70d027fa67d9b40b367264736f6c63430008130033","opcodes":"PUSH2 0x119 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29A5F2F6 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x49 PUSH1 0x43 CALLDATASIZE PUSH1 0x4 PUSH1 0x5B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH1 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH1 0xAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH1 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH1 0xD8 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH1 0xC2 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x1192EC7AE593FE6EC916F0A48222AB00530B94CE70D027FA67D9B4 SIGNEXTEND CALLDATASIZE PUSH19 0x64736F6C634300081300330000000000000000 ","sourceMap":"127:96:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;127:96:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@poseidon_386":{"entryPoint":null,"id":386,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":91,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1061:5","statements":[{"nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nodeType":"YulBlock","src":"107:762:5","statements":[{"body":{"nodeType":"YulBlock","src":"153:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"162:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"155:6:5"},"nodeType":"YulFunctionCall","src":"155:12:5"},"nodeType":"YulExpressionStatement","src":"155:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"128:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"124:3:5"},"nodeType":"YulFunctionCall","src":"124:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"149:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"120:3:5"},"nodeType":"YulFunctionCall","src":"120:32:5"},"nodeType":"YulIf","src":"117:52:5"},{"body":{"nodeType":"YulBlock","src":"224:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"233:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"236:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"226:6:5"},"nodeType":"YulFunctionCall","src":"226:12:5"},"nodeType":"YulExpressionStatement","src":"226:12:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"196:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"207:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"192:3:5"},"nodeType":"YulFunctionCall","src":"192:20:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"214:7:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"188:3:5"},"nodeType":"YulFunctionCall","src":"188:34:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"181:6:5"},"nodeType":"YulFunctionCall","src":"181:42:5"},"nodeType":"YulIf","src":"178:62:5"},{"nodeType":"YulVariableDeclaration","src":"249:23:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"269:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"263:5:5"},"nodeType":"YulFunctionCall","src":"263:9:5"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"253:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"281:33:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"303:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"311:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"299:3:5"},"nodeType":"YulFunctionCall","src":"299:15:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"285:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"397:111:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"418:1:5","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"425:3:5","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"430:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"421:3:5"},"nodeType":"YulFunctionCall","src":"421:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"411:6:5"},"nodeType":"YulFunctionCall","src":"411:31:5"},"nodeType":"YulExpressionStatement","src":"411:31:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"462:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"465:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"455:6:5"},"nodeType":"YulFunctionCall","src":"455:15:5"},"nodeType":"YulExpressionStatement","src":"455:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"490:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"493:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"483:6:5"},"nodeType":"YulFunctionCall","src":"483:15:5"},"nodeType":"YulExpressionStatement","src":"483:15:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"332:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"344:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"329:2:5"},"nodeType":"YulFunctionCall","src":"329:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"368:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"380:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"365:2:5"},"nodeType":"YulFunctionCall","src":"365:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"326:2:5"},"nodeType":"YulFunctionCall","src":"326:62:5"},"nodeType":"YulIf","src":"323:185:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"524:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"528:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"517:6:5"},"nodeType":"YulFunctionCall","src":"517:22:5"},"nodeType":"YulExpressionStatement","src":"517:22:5"},{"nodeType":"YulVariableDeclaration","src":"548:17:5","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"559:6:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"552:3:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"574:32:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"592:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"603:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"588:3:5"},"nodeType":"YulFunctionCall","src":"588:18:5"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"578:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"638:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"647:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"650:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"640:6:5"},"nodeType":"YulFunctionCall","src":"640:12:5"},"nodeType":"YulExpressionStatement","src":"640:12:5"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"621:6:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"629:7:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"618:2:5"},"nodeType":"YulFunctionCall","src":"618:19:5"},"nodeType":"YulIf","src":"615:39:5"},{"nodeType":"YulVariableDeclaration","src":"663:20:5","value":{"name":"headStart","nodeType":"YulIdentifier","src":"674:9:5"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"667:3:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"750:88:5","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"771:3:5"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"789:3:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"776:12:5"},"nodeType":"YulFunctionCall","src":"776:17:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"764:6:5"},"nodeType":"YulFunctionCall","src":"764:30:5"},"nodeType":"YulExpressionStatement","src":"764:30:5"},{"nodeType":"YulAssignment","src":"807:21:5","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"818:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"823:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"814:3:5"},"nodeType":"YulFunctionCall","src":"814:14:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"807:3:5"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"703:3:5"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"708:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"700:2:5"},"nodeType":"YulFunctionCall","src":"700:15:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"716:25:5","statements":[{"nodeType":"YulAssignment","src":"718:21:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"729:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"734:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"725:3:5"},"nodeType":"YulFunctionCall","src":"725:14:5"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"718:3:5"}]}]},"pre":{"nodeType":"YulBlock","src":"696:3:5","statements":[]},"src":"692:146:5"},{"nodeType":"YulAssignment","src":"847:16:5","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"857:6:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"847:6:5"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"73:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"84:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"96:6:5","type":""}],"src":"14:855:5"},{"body":{"nodeType":"YulBlock","src":"983:76:5","statements":[{"nodeType":"YulAssignment","src":"993:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1005:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1016:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1001:3:5"},"nodeType":"YulFunctionCall","src":"1001:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"993:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1035:9:5"},{"name":"value0","nodeType":"YulIdentifier","src":"1046:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1028:6:5"},"nodeType":"YulFunctionCall","src":"1028:25:5"},"nodeType":"YulExpressionStatement","src":"1028:25:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"952:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"963:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"974:4:5","type":""}],"src":"874:185:5"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        if iszero(slt(add(headStart, 0x1f), dataEnd)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let srcEnd := add(headStart, 64)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := headStart\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, 0x20)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806329a5f2f6146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060408284031215606c57600080fd5b82601f830112607a57600080fd5b6040516040810181811067ffffffffffffffff8211171560aa57634e487b7160e01b600052604160045260246000fd5b806040525080604084018581111560c057600080fd5b845b8181101560d857803583526020928301920160c2565b50919594505050505056fea26469706673582212207b001192ec7ae593fe6ec916f0a48222ab00530b94ce70d027fa67d9b40b367264736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29A5F2F6 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x49 PUSH1 0x43 CALLDATASIZE PUSH1 0x4 PUSH1 0x5B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH1 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH1 0xAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 PUSH1 0x40 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH1 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH1 0xD8 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH1 0xC2 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x1192EC7AE593FE6EC916F0A48222AB00530B94CE70D027FA67D9B4 SIGNEXTEND CALLDATASIZE PUSH19 0x64736F6C634300081300330000000000000000 ","sourceMap":"127:96:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;152:69;;;;;;:::i;:::-;-1:-1:-1;210:7:4;;152:69;;;;1028:25:5;;;1016:2;1001:18;152:69:4;;;;;;;14:855:5;96:6;149:2;137:9;128:7;124:23;120:32;117:52;;;165:1;162;155:12;117:52;214:7;207:4;196:9;192:20;188:34;178:62;;236:1;233;226:12;178:62;269:2;263:9;311:2;303:6;299:15;380:6;368:10;365:22;344:18;332:10;329:34;326:62;323:185;;;430:10;425:3;421:20;418:1;411:31;465:4;462:1;455:15;493:4;490:1;483:15;323:185;528:10;524:2;517:22;;559:6;603:2;592:9;588:18;629:7;621:6;618:19;615:39;;;650:1;647;640:12;615:39;674:9;692:146;708:6;703:3;700:15;692:146;;;776:17;;764:30;;823:4;814:14;;;;725;692:146;;;-1:-1:-1;857:6:5;;14:855;-1:-1:-1;;;;;14:855:5:o"},"gasEstimates":{"creation":{"codeDepositCost":"56200","executionCost":"139","totalCost":"56339"},"external":{"poseidon(uint256[2])":"infinite"}},"methodIdentifiers":{"poseidon(uint256[2])":"29a5f2f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"name\":\"poseidon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Poseidon.sol\":\"PoseidonT3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Poseidon.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\n/* Reference Poseidon hasher library contract using 2 inputs */\\nlibrary PoseidonT3 {\\n    function poseidon(uint256[2] memory) public pure returns (uint256) {}\\n}\\n\\n/* Reference Poseidon hasher library contract using 4 inputs (account hash) */\\nlibrary PoseidonT5 {\\n    function poseidon(uint256[4] memory) public pure returns (uint256) {}\\n}\\n\\n/* Reference Poseidon hasher library contract using 5 inputs (account hash) */\\nlibrary PoseidonT6 {\\n    function poseidon(uint256[5] memory) public pure returns (uint256) {}\\n}\",\"keccak256\":\"0x3ff51da19073f6a325bce4f1076ce9f4102cfaa396bfbaafd071c4efc11cdace\",\"license\":\"GNU GPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"PoseidonT5":{"abi":[{"inputs":[{"internalType":"uint256[4]","name":"","type":"uint256[4]"}],"name":"poseidon","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61011761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063248f6677146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060808284031215606c57600080fd5b82601f830112607a57600080fd5b6040516080810181811067ffffffffffffffff8211171560aa57634e487b7160e01b600052604160045260246000fd5b60405280608084018581111560be57600080fd5b845b8181101560d657803583526020928301920160c0565b50919594505050505056fea2646970667358221220bcca90c6b07aafb469a1e28a68c69f9a3a840185b06e3e6879662bdc8e20721564736f6c63430008130033","opcodes":"PUSH2 0x117 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x248F6677 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x49 PUSH1 0x43 CALLDATASIZE PUSH1 0x4 PUSH1 0x5B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH1 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH1 0xAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x80 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH1 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH1 0xD6 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH1 0xC0 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xCA SWAP1 0xC6 0xB0 PUSH27 0xAFB469A1E28A68C69F9A3A840185B06E3E6879662BDC8E20721564 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"304:96:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;304:96:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@poseidon_397":{"entryPoint":null,"id":397,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$4_memory_ptr":{"entryPoint":91,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1064:5","statements":[{"nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nodeType":"YulBlock","src":"107:765:5","statements":[{"body":{"nodeType":"YulBlock","src":"154:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"163:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"166:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"156:6:5"},"nodeType":"YulFunctionCall","src":"156:12:5"},"nodeType":"YulExpressionStatement","src":"156:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"128:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"124:3:5"},"nodeType":"YulFunctionCall","src":"124:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"149:3:5","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"120:3:5"},"nodeType":"YulFunctionCall","src":"120:33:5"},"nodeType":"YulIf","src":"117:53:5"},{"body":{"nodeType":"YulBlock","src":"225:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"237:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"227:6:5"},"nodeType":"YulFunctionCall","src":"227:12:5"},"nodeType":"YulExpressionStatement","src":"227:12:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"197:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"208:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"193:3:5"},"nodeType":"YulFunctionCall","src":"193:20:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"215:7:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"189:3:5"},"nodeType":"YulFunctionCall","src":"189:34:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"182:6:5"},"nodeType":"YulFunctionCall","src":"182:42:5"},"nodeType":"YulIf","src":"179:62:5"},{"nodeType":"YulVariableDeclaration","src":"250:23:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"270:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"264:5:5"},"nodeType":"YulFunctionCall","src":"264:9:5"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"254:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"282:34:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"304:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"312:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"300:3:5"},"nodeType":"YulFunctionCall","src":"300:16:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"286:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"399:111:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"420:1:5","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"427:3:5","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"432:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"423:3:5"},"nodeType":"YulFunctionCall","src":"423:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"413:6:5"},"nodeType":"YulFunctionCall","src":"413:31:5"},"nodeType":"YulExpressionStatement","src":"413:31:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"457:6:5"},"nodeType":"YulFunctionCall","src":"457:15:5"},"nodeType":"YulExpressionStatement","src":"457:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"495:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"485:6:5"},"nodeType":"YulFunctionCall","src":"485:15:5"},"nodeType":"YulExpressionStatement","src":"485:15:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"334:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"346:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"331:2:5"},"nodeType":"YulFunctionCall","src":"331:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"370:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"382:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"367:2:5"},"nodeType":"YulFunctionCall","src":"367:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"328:2:5"},"nodeType":"YulFunctionCall","src":"328:62:5"},"nodeType":"YulIf","src":"325:185:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"530:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"519:6:5"},"nodeType":"YulFunctionCall","src":"519:22:5"},"nodeType":"YulExpressionStatement","src":"519:22:5"},{"nodeType":"YulVariableDeclaration","src":"550:17:5","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"561:6:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"554:3:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"576:33:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"594:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"605:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"590:3:5"},"nodeType":"YulFunctionCall","src":"590:19:5"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"580:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"641:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"650:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"653:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"643:6:5"},"nodeType":"YulFunctionCall","src":"643:12:5"},"nodeType":"YulExpressionStatement","src":"643:12:5"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"624:6:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"632:7:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"621:2:5"},"nodeType":"YulFunctionCall","src":"621:19:5"},"nodeType":"YulIf","src":"618:39:5"},{"nodeType":"YulVariableDeclaration","src":"666:20:5","value":{"name":"headStart","nodeType":"YulIdentifier","src":"677:9:5"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"670:3:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"753:88:5","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"774:3:5"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"792:3:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"779:12:5"},"nodeType":"YulFunctionCall","src":"779:17:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"767:6:5"},"nodeType":"YulFunctionCall","src":"767:30:5"},"nodeType":"YulExpressionStatement","src":"767:30:5"},{"nodeType":"YulAssignment","src":"810:21:5","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"821:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"826:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:5"},"nodeType":"YulFunctionCall","src":"817:14:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"810:3:5"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"706:3:5"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"711:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"703:2:5"},"nodeType":"YulFunctionCall","src":"703:15:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"719:25:5","statements":[{"nodeType":"YulAssignment","src":"721:21:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"732:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"737:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"728:3:5"},"nodeType":"YulFunctionCall","src":"728:14:5"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"721:3:5"}]}]},"pre":{"nodeType":"YulBlock","src":"699:3:5","statements":[]},"src":"695:146:5"},{"nodeType":"YulAssignment","src":"850:16:5","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"860:6:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"850:6:5"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$4_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"73:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"84:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"96:6:5","type":""}],"src":"14:858:5"},{"body":{"nodeType":"YulBlock","src":"986:76:5","statements":[{"nodeType":"YulAssignment","src":"996:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1008:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1019:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1004:3:5"},"nodeType":"YulFunctionCall","src":"1004:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"996:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1038:9:5"},{"name":"value0","nodeType":"YulIdentifier","src":"1049:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1031:6:5"},"nodeType":"YulFunctionCall","src":"1031:25:5"},"nodeType":"YulExpressionStatement","src":"1031:25:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"955:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"966:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"977:4:5","type":""}],"src":"877:185:5"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_array$_t_uint256_$4_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        if iszero(slt(add(headStart, 0x1f), dataEnd)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 128)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let srcEnd := add(headStart, 128)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := headStart\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, 0x20)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063248f6677146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060808284031215606c57600080fd5b82601f830112607a57600080fd5b6040516080810181811067ffffffffffffffff8211171560aa57634e487b7160e01b600052604160045260246000fd5b60405280608084018581111560be57600080fd5b845b8181101560d657803583526020928301920160c0565b50919594505050505056fea2646970667358221220bcca90c6b07aafb469a1e28a68c69f9a3a840185b06e3e6879662bdc8e20721564736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x248F6677 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x49 PUSH1 0x43 CALLDATASIZE PUSH1 0x4 PUSH1 0x5B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH1 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH1 0xAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x80 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH1 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH1 0xD6 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH1 0xC0 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xCA SWAP1 0xC6 0xB0 PUSH27 0xAFB469A1E28A68C69F9A3A840185B06E3E6879662BDC8E20721564 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"304:96:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;329:69;;;;;;:::i;:::-;-1:-1:-1;387:7:4;;329:69;;;;1031:25:5;;;1019:2;1004:18;329:69:4;;;;;;;14:858:5;96:6;149:3;137:9;128:7;124:23;120:33;117:53;;;166:1;163;156:12;117:53;215:7;208:4;197:9;193:20;189:34;179:62;;237:1;234;227:12;179:62;270:2;264:9;312:3;304:6;300:16;382:6;370:10;367:22;346:18;334:10;331:34;328:62;325:185;;;432:10;427:3;423:20;420:1;413:31;467:4;464:1;457:15;495:4;492:1;485:15;325:185;526:2;519:22;561:6;605:3;590:19;;621;;;618:39;;;653:1;650;643:12;618:39;677:9;695:146;711:6;706:3;703:15;695:146;;;779:17;;767:30;;826:4;817:14;;;;728;695:146;;;-1:-1:-1;860:6:5;;14:858;-1:-1:-1;;;;;14:858:5:o"},"gasEstimates":{"creation":{"codeDepositCost":"55800","executionCost":"139","totalCost":"55939"},"external":{"poseidon(uint256[4])":"infinite"}},"methodIdentifiers":{"poseidon(uint256[4])":"248f6677"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"\",\"type\":\"uint256[4]\"}],\"name\":\"poseidon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Poseidon.sol\":\"PoseidonT5\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Poseidon.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\n/* Reference Poseidon hasher library contract using 2 inputs */\\nlibrary PoseidonT3 {\\n    function poseidon(uint256[2] memory) public pure returns (uint256) {}\\n}\\n\\n/* Reference Poseidon hasher library contract using 4 inputs (account hash) */\\nlibrary PoseidonT5 {\\n    function poseidon(uint256[4] memory) public pure returns (uint256) {}\\n}\\n\\n/* Reference Poseidon hasher library contract using 5 inputs (account hash) */\\nlibrary PoseidonT6 {\\n    function poseidon(uint256[5] memory) public pure returns (uint256) {}\\n}\",\"keccak256\":\"0x3ff51da19073f6a325bce4f1076ce9f4102cfaa396bfbaafd071c4efc11cdace\",\"license\":\"GNU GPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"PoseidonT6":{"abi":[{"inputs":[{"internalType":"uint256[5]","name":"","type":"uint256[5]"}],"name":"poseidon","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61011761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80634937a258146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060a08284031215606c57600080fd5b82601f830112607a57600080fd5b60405160a0810181811067ffffffffffffffff8211171560aa57634e487b7160e01b600052604160045260246000fd5b6040528060a084018581111560be57600080fd5b845b8181101560d657803583526020928301920160c0565b50919594505050505056fea26469706673582212208689506770d7e9fbd37f4902faa3a06d206939f5f7f2fd50a4302c517e386a7c64736f6c63430008130033","opcodes":"PUSH2 0x117 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4937A258 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x49 PUSH1 0x43 CALLDATASIZE PUSH1 0x4 PUSH1 0x5B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH1 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH1 0xAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0xA0 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH1 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH1 0xD6 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH1 0xC0 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DUP10 POP PUSH8 0x70D7E9FBD37F4902 STATICCALL LOG3 LOG0 PUSH14 0x206939F5F7F2FD50A4302C517E38 PUSH11 0x7C64736F6C634300081300 CALLER ","sourceMap":"481:96:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;481:96:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@poseidon_408":{"entryPoint":null,"id":408,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$5_memory_ptr":{"entryPoint":91,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1064:5","statements":[{"nodeType":"YulBlock","src":"6:3:5","statements":[]},{"body":{"nodeType":"YulBlock","src":"107:765:5","statements":[{"body":{"nodeType":"YulBlock","src":"154:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"163:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"166:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"156:6:5"},"nodeType":"YulFunctionCall","src":"156:12:5"},"nodeType":"YulExpressionStatement","src":"156:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"128:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"124:3:5"},"nodeType":"YulFunctionCall","src":"124:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"149:3:5","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"120:3:5"},"nodeType":"YulFunctionCall","src":"120:33:5"},"nodeType":"YulIf","src":"117:53:5"},{"body":{"nodeType":"YulBlock","src":"225:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"237:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"227:6:5"},"nodeType":"YulFunctionCall","src":"227:12:5"},"nodeType":"YulExpressionStatement","src":"227:12:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"197:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"208:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"193:3:5"},"nodeType":"YulFunctionCall","src":"193:20:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"215:7:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"189:3:5"},"nodeType":"YulFunctionCall","src":"189:34:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"182:6:5"},"nodeType":"YulFunctionCall","src":"182:42:5"},"nodeType":"YulIf","src":"179:62:5"},{"nodeType":"YulVariableDeclaration","src":"250:23:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"270:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"264:5:5"},"nodeType":"YulFunctionCall","src":"264:9:5"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"254:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"282:34:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"304:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"312:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"300:3:5"},"nodeType":"YulFunctionCall","src":"300:16:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"286:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"399:111:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"420:1:5","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"427:3:5","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"432:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"423:3:5"},"nodeType":"YulFunctionCall","src":"423:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"413:6:5"},"nodeType":"YulFunctionCall","src":"413:31:5"},"nodeType":"YulExpressionStatement","src":"413:31:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"457:6:5"},"nodeType":"YulFunctionCall","src":"457:15:5"},"nodeType":"YulExpressionStatement","src":"457:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"492:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"495:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"485:6:5"},"nodeType":"YulFunctionCall","src":"485:15:5"},"nodeType":"YulExpressionStatement","src":"485:15:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"334:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"346:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"331:2:5"},"nodeType":"YulFunctionCall","src":"331:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"370:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"382:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"367:2:5"},"nodeType":"YulFunctionCall","src":"367:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"328:2:5"},"nodeType":"YulFunctionCall","src":"328:62:5"},"nodeType":"YulIf","src":"325:185:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"530:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"519:6:5"},"nodeType":"YulFunctionCall","src":"519:22:5"},"nodeType":"YulExpressionStatement","src":"519:22:5"},{"nodeType":"YulVariableDeclaration","src":"550:17:5","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"561:6:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"554:3:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"576:33:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"594:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"605:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"590:3:5"},"nodeType":"YulFunctionCall","src":"590:19:5"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"580:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"641:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"650:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"653:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"643:6:5"},"nodeType":"YulFunctionCall","src":"643:12:5"},"nodeType":"YulExpressionStatement","src":"643:12:5"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"624:6:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"632:7:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"621:2:5"},"nodeType":"YulFunctionCall","src":"621:19:5"},"nodeType":"YulIf","src":"618:39:5"},{"nodeType":"YulVariableDeclaration","src":"666:20:5","value":{"name":"headStart","nodeType":"YulIdentifier","src":"677:9:5"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"670:3:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"753:88:5","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"774:3:5"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"792:3:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"779:12:5"},"nodeType":"YulFunctionCall","src":"779:17:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"767:6:5"},"nodeType":"YulFunctionCall","src":"767:30:5"},"nodeType":"YulExpressionStatement","src":"767:30:5"},{"nodeType":"YulAssignment","src":"810:21:5","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"821:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"826:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"817:3:5"},"nodeType":"YulFunctionCall","src":"817:14:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"810:3:5"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"706:3:5"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"711:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"703:2:5"},"nodeType":"YulFunctionCall","src":"703:15:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"719:25:5","statements":[{"nodeType":"YulAssignment","src":"721:21:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"732:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"737:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"728:3:5"},"nodeType":"YulFunctionCall","src":"728:14:5"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"721:3:5"}]}]},"pre":{"nodeType":"YulBlock","src":"699:3:5","statements":[]},"src":"695:146:5"},{"nodeType":"YulAssignment","src":"850:16:5","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"860:6:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"850:6:5"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$5_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"73:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"84:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"96:6:5","type":""}],"src":"14:858:5"},{"body":{"nodeType":"YulBlock","src":"986:76:5","statements":[{"nodeType":"YulAssignment","src":"996:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1008:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1019:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1004:3:5"},"nodeType":"YulFunctionCall","src":"1004:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"996:4:5"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1038:9:5"},{"name":"value0","nodeType":"YulIdentifier","src":"1049:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1031:6:5"},"nodeType":"YulFunctionCall","src":"1031:25:5"},"nodeType":"YulExpressionStatement","src":"1031:25:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"955:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"966:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"977:4:5","type":""}],"src":"877:185:5"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_array$_t_uint256_$5_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        if iszero(slt(add(headStart, 0x1f), dataEnd)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let srcEnd := add(headStart, 160)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := headStart\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, 0x20)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80634937a258146038575b600080fd5b60496043366004605b565b50600090565b60405190815260200160405180910390f35b600060a08284031215606c57600080fd5b82601f830112607a57600080fd5b60405160a0810181811067ffffffffffffffff8211171560aa57634e487b7160e01b600052604160045260246000fd5b6040528060a084018581111560be57600080fd5b845b8181101560d657803583526020928301920160c0565b50919594505050505056fea26469706673582212208689506770d7e9fbd37f4902faa3a06d206939f5f7f2fd50a4302c517e386a7c64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4937A258 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x49 PUSH1 0x43 CALLDATASIZE PUSH1 0x4 PUSH1 0x5B JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH1 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH1 0xAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0xA0 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH1 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH1 0xD6 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH1 0xC0 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 DUP10 POP PUSH8 0x70D7E9FBD37F4902 STATICCALL LOG3 LOG0 PUSH14 0x206939F5F7F2FD50A4302C517E38 PUSH11 0x7C64736F6C634300081300 CALLER ","sourceMap":"481:96:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;506:69;;;;;;:::i;:::-;-1:-1:-1;564:7:4;;506:69;;;;1031:25:5;;;1019:2;1004:18;506:69:4;;;;;;;14:858:5;96:6;149:3;137:9;128:7;124:23;120:33;117:53;;;166:1;163;156:12;117:53;215:7;208:4;197:9;193:20;189:34;179:62;;237:1;234;227:12;179:62;270:2;264:9;312:3;304:6;300:16;382:6;370:10;367:22;346:18;334:10;331:34;328:62;325:185;;;432:10;427:3;423:20;420:1;413:31;467:4;464:1;457:15;495:4;492:1;485:15;325:185;526:2;519:22;561:6;605:3;590:19;;621;;;618:39;;;653:1;650;643:12;618:39;677:9;695:146;711:6;706:3;703:15;695:146;;;779:17;;767:30;;826:4;817:14;;;;728;695:146;;;-1:-1:-1;860:6:5;;14:858;-1:-1:-1;;;;;14:858:5:o"},"gasEstimates":{"creation":{"codeDepositCost":"55800","executionCost":"139","totalCost":"55939"},"external":{"poseidon(uint256[5])":"infinite"}},"methodIdentifiers":{"poseidon(uint256[5])":"4937a258"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"\",\"type\":\"uint256[5]\"}],\"name\":\"poseidon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Poseidon.sol\":\"PoseidonT6\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Poseidon.sol\":{\"content\":\"//SPDX-License-Identifier: GNU GPLv3\\npragma solidity ^0.8.19;\\n\\n/* Reference Poseidon hasher library contract using 2 inputs */\\nlibrary PoseidonT3 {\\n    function poseidon(uint256[2] memory) public pure returns (uint256) {}\\n}\\n\\n/* Reference Poseidon hasher library contract using 4 inputs (account hash) */\\nlibrary PoseidonT5 {\\n    function poseidon(uint256[4] memory) public pure returns (uint256) {}\\n}\\n\\n/* Reference Poseidon hasher library contract using 5 inputs (account hash) */\\nlibrary PoseidonT6 {\\n    function poseidon(uint256[5] memory) public pure returns (uint256) {}\\n}\",\"keccak256\":\"0x3ff51da19073f6a325bce4f1076ce9f4102cfaa396bfbaafd071c4efc11cdace\",\"license\":\"GNU GPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}